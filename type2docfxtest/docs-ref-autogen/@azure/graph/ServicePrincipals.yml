### YamlMime:TSType
name: ServicePrincipals
uid: '@azure/graph.ServicePrincipals'
package: '@azure/graph'
summary: Class representing a ServicePrincipals.
fullName: ServicePrincipals
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: ServicePrincipals(GraphRbacManagementClientContext)
    uid: '@azure/graph.ServicePrincipals.constructor'
    package: '@azure/graph'
    summary: Create a ServicePrincipals.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new ServicePrincipals(client: GraphRbacManagementClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/graph.GraphRbacManagementClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'create(ServicePrincipalCreateParameters, msRest.RequestOptionsBase)'
    uid: '@azure/graph.ServicePrincipals.create'
    package: '@azure/graph'
    summary: Creates a service principal in the directory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(parameters: ServicePrincipalCreateParameters, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ServicePrincipalsCreateResponse>
      parameters:
        - id: parameters
          type: <xref uid="@azure/graph.ServicePrincipalCreateParameters" />
          description: Parameters to create a service principal.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServicePrincipalsCreateResponse>
        type: Promise&lt;<xref uid="Models.ServicePrincipalsCreateResponse" />&gt;
  - name: >-
      create(ServicePrincipalCreateParameters, RequestOptionsBase,
      ServiceCallback<ServicePrincipal>)
    uid: '@azure/graph.ServicePrincipals.create_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(parameters: ServicePrincipalCreateParameters, options:
        RequestOptionsBase, callback: ServiceCallback<ServicePrincipal>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/graph.ServicePrincipalCreateParameters" />
          description: Parameters to create a service principal.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.ServicePrincipal" />&gt;
          description: |
            The callback
  - name: >-
      create(ServicePrincipalCreateParameters,
      ServiceCallback<ServicePrincipal>)
    uid: '@azure/graph.ServicePrincipals.create_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(parameters: ServicePrincipalCreateParameters, callback:
        ServiceCallback<ServicePrincipal>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/graph.ServicePrincipalCreateParameters" />
          description: Parameters to create a service principal.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.ServicePrincipal" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    uid: '@azure/graph.ServicePrincipals.deleteMethod'
    package: '@azure/graph'
    summary: Deletes a service principal from the directory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(objectId: string, options?:
        msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal to delete.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    uid: '@azure/graph.ServicePrincipals.deleteMethod_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(objectId: string, options: RequestOptionsBase,
        callback: ServiceCallback<void>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal to delete.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, ServiceCallback<void>)'
    uid: '@azure/graph.ServicePrincipals.deleteMethod_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function deleteMethod(objectId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal to delete.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, msRest.RequestOptionsBase)'
    uid: '@azure/graph.ServicePrincipals.get'
    package: '@azure/graph'
    summary: >-
      Gets service principal information from the directory. Query by objectId
      or pass a filter to

      query by appId
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(objectId: string, options?: msRest.RequestOptionsBase):
        Promise<Models.ServicePrincipalsGetResponse>
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal to get.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServicePrincipalsGetResponse>
        type: Promise&lt;<xref uid="Models.ServicePrincipalsGetResponse" />&gt;
  - name: 'get(string, RequestOptionsBase, ServiceCallback<ServicePrincipal>)'
    uid: '@azure/graph.ServicePrincipals.get_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(objectId: string, options: RequestOptionsBase, callback:
        ServiceCallback<ServicePrincipal>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal to get.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.ServicePrincipal" />&gt;
          description: |
            The callback
  - name: 'get(string, ServiceCallback<ServicePrincipal>)'
    uid: '@azure/graph.ServicePrincipals.get_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(objectId: string, callback:
        ServiceCallback<ServicePrincipal>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal to get.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/graph.ServicePrincipal" />&gt;
          description: |
            The callback
  - name: list(Models.ServicePrincipalsListOptionalParams)
    uid: '@azure/graph.ServicePrincipals.list'
    package: '@azure/graph'
    summary: Gets a list of service principals from the current tenant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: Models.ServicePrincipalsListOptionalParams):
        Promise<Models.ServicePrincipalsListResponse>
      parameters:
        - id: options
          type: <xref uid="Models.ServicePrincipalsListOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ServicePrincipalsListResponse>
        type: Promise&lt;<xref uid="Models.ServicePrincipalsListResponse" />&gt;
  - name: list(ServiceCallback<ServicePrincipalListResult>)
    uid: '@azure/graph.ServicePrincipals.list_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<ServicePrincipalListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.ServicePrincipalListResult" />&gt;
          description: |
            The callback
  - name: >-
      list(ServicePrincipalsListOptionalParams,
      ServiceCallback<ServicePrincipalListResult>)
    uid: '@azure/graph.ServicePrincipals.list_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options: ServicePrincipalsListOptionalParams, callback:
        ServiceCallback<ServicePrincipalListResult>)
      parameters:
        - id: options
          type: <xref uid="@azure/graph.ServicePrincipalsListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.ServicePrincipalListResult" />&gt;
          description: |
            The callback
  - name: 'listKeyCredentials(string, msRest.RequestOptionsBase)'
    uid: '@azure/graph.ServicePrincipals.listKeyCredentials'
    package: '@azure/graph'
    summary: Get the keyCredentials associated with the specified service principal.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeyCredentials(objectId: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ServicePrincipalsListKeyCredentialsResponse>
      parameters:
        - id: objectId
          type: string
          description: >-
            The object ID of the service principal for which to get
            keyCredentials.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServicePrincipalsListKeyCredentialsResponse>
        type: >-
          Promise&lt;<xref
          uid="Models.ServicePrincipalsListKeyCredentialsResponse" />&gt;
  - name: >-
      listKeyCredentials(string, RequestOptionsBase,
      ServiceCallback<KeyCredentialListResult>)
    uid: '@azure/graph.ServicePrincipals.listKeyCredentials_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeyCredentials(objectId: string, options:
        RequestOptionsBase, callback: ServiceCallback<KeyCredentialListResult>)
      parameters:
        - id: objectId
          type: string
          description: >-
            The object ID of the service principal for which to get
            keyCredentials.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/graph.KeyCredentialListResult"
            />&gt;
          description: |
            The callback
  - name: 'listKeyCredentials(string, ServiceCallback<KeyCredentialListResult>)'
    uid: '@azure/graph.ServicePrincipals.listKeyCredentials_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listKeyCredentials(objectId: string, callback:
        ServiceCallback<KeyCredentialListResult>)
      parameters:
        - id: objectId
          type: string
          description: >-
            The object ID of the service principal for which to get
            keyCredentials.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/graph.KeyCredentialListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/graph.ServicePrincipals.listNext'
    package: '@azure/graph'
    summary: Gets a list of service principals from the current tenant.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ServicePrincipalsListNextResponse>
      parameters:
        - id: nextLink
          type: string
          description: Next link for the list operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServicePrincipalsListNextResponse>
        type: Promise&lt;<xref uid="Models.ServicePrincipalsListNextResponse" />&gt;
  - name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<ServicePrincipalListResult>)
    uid: '@azure/graph.ServicePrincipals.listNext_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<ServicePrincipalListResult>)
      parameters:
        - id: nextLink
          type: string
          description: Next link for the list operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.ServicePrincipalListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<ServicePrincipalListResult>)'
    uid: '@azure/graph.ServicePrincipals.listNext_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextLink: string, callback:
        ServiceCallback<ServicePrincipalListResult>)
      parameters:
        - id: nextLink
          type: string
          description: Next link for the list operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.ServicePrincipalListResult" />&gt;
          description: |
            The callback
  - name: 'listOwners(string, msRest.RequestOptionsBase)'
    uid: '@azure/graph.ServicePrincipals.listOwners'
    package: '@azure/graph'
    summary: >-
      The owners are a set of non-admin users who are allowed to modify this
      object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listOwners(objectId: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ServicePrincipalsListOwnersResponse>
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal for which to get owners.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServicePrincipalsListOwnersResponse>
        type: >-
          Promise&lt;<xref uid="Models.ServicePrincipalsListOwnersResponse"
          />&gt;
  - name: >-
      listOwners(string, RequestOptionsBase,
      ServiceCallback<DirectoryObjectListResult>)
    uid: '@azure/graph.ServicePrincipals.listOwners_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listOwners(objectId: string, options: RequestOptionsBase,
        callback: ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal for which to get owners.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.DirectoryObjectListResult" />&gt;
          description: |
            The callback
  - name: 'listOwners(string, ServiceCallback<DirectoryObjectListResult>)'
    uid: '@azure/graph.ServicePrincipals.listOwners_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listOwners(objectId: string, callback:
        ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal for which to get owners.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.DirectoryObjectListResult" />&gt;
          description: |
            The callback
  - name: 'listOwnersNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/graph.ServicePrincipals.listOwnersNext'
    package: '@azure/graph'
    summary: >-
      The owners are a set of non-admin users who are allowed to modify this
      object.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listOwnersNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ServicePrincipalsListOwnersNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServicePrincipalsListOwnersNextResponse>
        type: >-
          Promise&lt;<xref uid="Models.ServicePrincipalsListOwnersNextResponse"
          />&gt;
  - name: >-
      listOwnersNext(string, RequestOptionsBase,
      ServiceCallback<DirectoryObjectListResult>)
    uid: '@azure/graph.ServicePrincipals.listOwnersNext_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listOwnersNext(nextPageLink: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.DirectoryObjectListResult" />&gt;
          description: |
            The callback
  - name: 'listOwnersNext(string, ServiceCallback<DirectoryObjectListResult>)'
    uid: '@azure/graph.ServicePrincipals.listOwnersNext_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listOwnersNext(nextPageLink: string, callback:
        ServiceCallback<DirectoryObjectListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.DirectoryObjectListResult" />&gt;
          description: |
            The callback
  - name: 'listPasswordCredentials(string, msRest.RequestOptionsBase)'
    uid: '@azure/graph.ServicePrincipals.listPasswordCredentials'
    package: '@azure/graph'
    summary: Gets the passwordCredentials associated with a service principal.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listPasswordCredentials(objectId: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ServicePrincipalsListPasswordCredentialsResponse>
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServicePrincipalsListPasswordCredentialsResponse>
        type: >-
          Promise&lt;<xref
          uid="Models.ServicePrincipalsListPasswordCredentialsResponse" />&gt;
  - name: >-
      listPasswordCredentials(string, RequestOptionsBase,
      ServiceCallback<PasswordCredentialListResult>)
    uid: '@azure/graph.ServicePrincipals.listPasswordCredentials_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listPasswordCredentials(objectId: string, options:
        RequestOptionsBase, callback:
        ServiceCallback<PasswordCredentialListResult>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.PasswordCredentialListResult" />&gt;
          description: |
            The callback
  - name: >-
      listPasswordCredentials(string,
      ServiceCallback<PasswordCredentialListResult>)
    uid: '@azure/graph.ServicePrincipals.listPasswordCredentials_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listPasswordCredentials(objectId: string, callback:
        ServiceCallback<PasswordCredentialListResult>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/graph.PasswordCredentialListResult" />&gt;
          description: |
            The callback
  - name: >-
      update(string, ServicePrincipalUpdateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/graph.ServicePrincipals.update'
    package: '@azure/graph'
    summary: Updates a service principal in the directory.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(objectId: string, parameters:
        ServicePrincipalUpdateParameters, options?: msRest.RequestOptionsBase):
        Promise<RestResponse>
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal to delete.
        - id: parameters
          type: <xref uid="@azure/graph.ServicePrincipalUpdateParameters" />
          description: Parameters to update a service principal.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: >-
      update(string, ServicePrincipalUpdateParameters, RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/graph.ServicePrincipals.update_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(objectId: string, parameters:
        ServicePrincipalUpdateParameters, options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal to delete.
        - id: parameters
          type: <xref uid="@azure/graph.ServicePrincipalUpdateParameters" />
          description: Parameters to update a service principal.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'update(string, ServicePrincipalUpdateParameters, ServiceCallback<void>)'
    uid: '@azure/graph.ServicePrincipals.update_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(objectId: string, parameters:
        ServicePrincipalUpdateParameters, callback: ServiceCallback<void>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal to delete.
        - id: parameters
          type: <xref uid="@azure/graph.ServicePrincipalUpdateParameters" />
          description: Parameters to update a service principal.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'updateKeyCredentials(string, KeyCredential[], msRest.RequestOptionsBase)'
    uid: '@azure/graph.ServicePrincipals.updateKeyCredentials'
    package: '@azure/graph'
    summary: Update the keyCredentials associated with a service principal.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateKeyCredentials(objectId: string, value: KeyCredential[],
        options?: msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: objectId
          type: string
          description: The object ID for which to get service principal information.
        - id: value
          type: '<xref uid="@azure/graph.KeyCredential" />[]'
          description: A collection of KeyCredentials.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: >-
      updateKeyCredentials(string, KeyCredential[], RequestOptionsBase,
      ServiceCallback<void>)
    uid: '@azure/graph.ServicePrincipals.updateKeyCredentials_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateKeyCredentials(objectId: string, value: KeyCredential[],
        options: RequestOptionsBase, callback: ServiceCallback<void>)
      parameters:
        - id: objectId
          type: string
          description: The object ID for which to get service principal information.
        - id: value
          type: '<xref uid="@azure/graph.KeyCredential" />[]'
          description: A collection of KeyCredentials.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'updateKeyCredentials(string, KeyCredential[], ServiceCallback<void>)'
    uid: '@azure/graph.ServicePrincipals.updateKeyCredentials_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateKeyCredentials(objectId: string, value: KeyCredential[],
        callback: ServiceCallback<void>)
      parameters:
        - id: objectId
          type: string
          description: The object ID for which to get service principal information.
        - id: value
          type: '<xref uid="@azure/graph.KeyCredential" />[]'
          description: A collection of KeyCredentials.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      updatePasswordCredentials(string, PasswordCredential[],
      msRest.RequestOptionsBase)
    uid: '@azure/graph.ServicePrincipals.updatePasswordCredentials'
    package: '@azure/graph'
    summary: Updates the passwordCredentials associated with a service principal.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updatePasswordCredentials(objectId: string, value:
        PasswordCredential[], options?: msRest.RequestOptionsBase):
        Promise<RestResponse>
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal.
        - id: value
          type: '<xref uid="@azure/graph.PasswordCredential" />[]'
          description: A collection of PasswordCredentials.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: >-
      updatePasswordCredentials(string, PasswordCredential[],
      RequestOptionsBase, ServiceCallback<void>)
    uid: '@azure/graph.ServicePrincipals.updatePasswordCredentials_2'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updatePasswordCredentials(objectId: string, value:
        PasswordCredential[], options: RequestOptionsBase, callback:
        ServiceCallback<void>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal.
        - id: value
          type: '<xref uid="@azure/graph.PasswordCredential" />[]'
          description: A collection of PasswordCredentials.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      updatePasswordCredentials(string, PasswordCredential[],
      ServiceCallback<void>)
    uid: '@azure/graph.ServicePrincipals.updatePasswordCredentials_1'
    package: '@azure/graph'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updatePasswordCredentials(objectId: string, value:
        PasswordCredential[], callback: ServiceCallback<void>)
      parameters:
        - id: objectId
          type: string
          description: The object ID of the service principal.
        - id: value
          type: '<xref uid="@azure/graph.PasswordCredential" />[]'
          description: A collection of PasswordCredentials.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback

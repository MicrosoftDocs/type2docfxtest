### YamlMime:TSType
name: ManagedDatabases
uid: '@azure/arm-sql.ManagedDatabases'
package: '@azure/arm-sql'
summary: Interface representing a ManagedDatabases.
fullName: ManagedDatabases
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCompleteRestore(string, string, string,
      CompleteDatabaseRestoreDefinition,
      ManagedDatabasesCompleteRestoreOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabases.beginCompleteRestore'
    package: '@azure/arm-sql'
    summary: Completes the restore operation on a managed database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCompleteRestore(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, parameters:
        CompleteDatabaseRestoreDefinition, options?:
        ManagedDatabasesCompleteRestoreOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CompleteDatabaseRestoreDefinition" />
          description: The definition for completing the restore of this managed database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.ManagedDatabasesCompleteRestoreOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginCompleteRestoreAndWait(string, string, string,
      CompleteDatabaseRestoreDefinition,
      ManagedDatabasesCompleteRestoreOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabases.beginCompleteRestoreAndWait'
    package: '@azure/arm-sql'
    summary: Completes the restore operation on a managed database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCompleteRestoreAndWait(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, parameters:
        CompleteDatabaseRestoreDefinition, options?:
        ManagedDatabasesCompleteRestoreOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.CompleteDatabaseRestoreDefinition" />
          description: The definition for completing the restore of this managed database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.ManagedDatabasesCompleteRestoreOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginCreateOrUpdate(string, string, string, ManagedDatabase,
      ManagedDatabasesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabases.beginCreateOrUpdate'
    package: '@azure/arm-sql'
    summary: Creates a new database or updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, parameters:
        ManagedDatabase, options?:
        ManagedDatabasesCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<ManagedDatabasesCreateOrUpdateResponse>,
        ManagedDatabasesCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ManagedDatabase" />
          description: The requested database resource state.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.ManagedDatabasesCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-sql.ManagedDatabasesCreateOrUpdateResponse" />&gt;,
          <xref uid="@azure/arm-sql.ManagedDatabasesCreateOrUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, ManagedDatabase,
      ManagedDatabasesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabases.beginCreateOrUpdateAndWait'
    package: '@azure/arm-sql'
    summary: Creates a new database or updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, parameters:
        ManagedDatabase, options?:
        ManagedDatabasesCreateOrUpdateOptionalParams):
        Promise<ManagedDatabasesCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ManagedDatabase" />
          description: The requested database resource state.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.ManagedDatabasesCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-sql.ManagedDatabasesCreateOrUpdateResponse" />&gt;
  - name: 'beginDelete(string, string, string, ManagedDatabasesDeleteOptionalParams)'
    uid: '@azure/arm-sql.ManagedDatabases.beginDelete'
    package: '@azure/arm-sql'
    summary: Deletes a managed database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, options?:
        ManagedDatabasesDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="@azure/arm-sql.ManagedDatabasesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginDeleteAndWait(string, string, string,
      ManagedDatabasesDeleteOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabases.beginDeleteAndWait'
    package: '@azure/arm-sql'
    summary: Deletes a managed database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, options?:
        ManagedDatabasesDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="@azure/arm-sql.ManagedDatabasesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, string, ManagedDatabaseUpdate,
      ManagedDatabasesUpdateOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabases.beginUpdate'
    package: '@azure/arm-sql'
    summary: Updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, managedInstanceName:
        string, databaseName: string, parameters: ManagedDatabaseUpdate,
        options?: ManagedDatabasesUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<ManagedDatabasesUpdateResponse>,
        ManagedDatabasesUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ManagedDatabaseUpdate" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="@azure/arm-sql.ManagedDatabasesUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-sql.ManagedDatabasesUpdateResponse" />&gt;, <xref
          uid="@azure/arm-sql.ManagedDatabasesUpdateResponse" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, ManagedDatabaseUpdate,
      ManagedDatabasesUpdateOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabases.beginUpdateAndWait'
    package: '@azure/arm-sql'
    summary: Updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string,
        managedInstanceName: string, databaseName: string, parameters:
        ManagedDatabaseUpdate, options?: ManagedDatabasesUpdateOptionalParams):
        Promise<ManagedDatabasesUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ManagedDatabaseUpdate" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="@azure/arm-sql.ManagedDatabasesUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-sql.ManagedDatabasesUpdateResponse"
          />&gt;
  - name: 'get(string, string, string, ManagedDatabasesGetOptionalParams)'
    uid: '@azure/arm-sql.ManagedDatabases.get'
    package: '@azure/arm-sql'
    summary: Gets a managed database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, managedInstanceName: string,
        databaseName: string, options?: ManagedDatabasesGetOptionalParams):
        Promise<ManagedDatabasesGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="@azure/arm-sql.ManagedDatabasesGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-sql.ManagedDatabasesGetResponse"
          />&gt;
  - name: >-
      listByInstance(string, string,
      ManagedDatabasesListByInstanceOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabases.listByInstance'
    package: '@azure/arm-sql'
    summary: Gets a list of managed databases.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByInstance(resourceGroupName: string, managedInstanceName:
        string, options?: ManagedDatabasesListByInstanceOptionalParams):
        PagedAsyncIterableIterator<ManagedDatabase>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.ManagedDatabasesListByInstanceOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-sql.ManagedDatabase" />&gt;
  - name: >-
      listInaccessibleByInstance(string, string,
      ManagedDatabasesListInaccessibleByInstanceOptionalParams)
    uid: '@azure/arm-sql.ManagedDatabases.listInaccessibleByInstance'
    package: '@azure/arm-sql'
    summary: Gets a list of inaccessible managed databases in a managed instance
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInaccessibleByInstance(resourceGroupName: string,
        managedInstanceName: string, options?:
        ManagedDatabasesListInaccessibleByInstanceOptionalParams):
        PagedAsyncIterableIterator<ManagedDatabase>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: managedInstanceName
          type: string
          description: The name of the managed instance.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.ManagedDatabasesListInaccessibleByInstanceOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-sql.ManagedDatabase" />&gt;

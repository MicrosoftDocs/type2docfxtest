### YamlMime:TSType
name: Databases
uid: '@azure/arm-sql.Databases'
package: '@azure/arm-sql'
summary: Interface representing a Databases.
fullName: Databases
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, string, Database,
      DatabasesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sql.Databases.beginCreateOrUpdate'
    package: '@azure/arm-sql'
    summary: Creates a new database or updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: Database, options?:
        DatabasesCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<DatabasesCreateOrUpdateResponse>,
        DatabasesCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.Database" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-sql.DatabasesCreateOrUpdateResponse" />&gt;, <xref
          uid="@azure/arm-sql.DatabasesCreateOrUpdateResponse" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, string, Database,
      DatabasesCreateOrUpdateOptionalParams)
    uid: '@azure/arm-sql.Databases.beginCreateOrUpdateAndWait'
    package: '@azure/arm-sql'
    summary: Creates a new database or updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        serverName: string, databaseName: string, parameters: Database,
        options?: DatabasesCreateOrUpdateOptionalParams):
        Promise<DatabasesCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.Database" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-sql.DatabasesCreateOrUpdateResponse"
          />&gt;
  - name: 'beginDelete(string, string, string, DatabasesDeleteOptionalParams)'
    uid: '@azure/arm-sql.Databases.beginDelete'
    package: '@azure/arm-sql'
    summary: Deletes the database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, serverName: string,
        databaseName: string, options?: DatabasesDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginDeleteAndWait(string, string, string, DatabasesDeleteOptionalParams)'
    uid: '@azure/arm-sql.Databases.beginDeleteAndWait'
    package: '@azure/arm-sql'
    summary: Deletes the database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, serverName:
        string, databaseName: string, options?: DatabasesDeleteOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginExport(string, string, string, ExportDatabaseDefinition,
      DatabasesExportOptionalParams)
    uid: '@azure/arm-sql.Databases.beginExport'
    package: '@azure/arm-sql'
    summary: Exports a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginExport(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ExportDatabaseDefinition, options?:
        DatabasesExportOptionalParams):
        Promise<PollerLike<PollOperationState<DatabasesExportResponse>,
        DatabasesExportResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ExportDatabaseDefinition" />
          description: The database export request parameters.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesExportOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-sql.DatabasesExportResponse" />&gt;, <xref
          uid="@azure/arm-sql.DatabasesExportResponse" />&gt;&gt;
  - name: >-
      beginExportAndWait(string, string, string, ExportDatabaseDefinition,
      DatabasesExportOptionalParams)
    uid: '@azure/arm-sql.Databases.beginExportAndWait'
    package: '@azure/arm-sql'
    summary: Exports a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginExportAndWait(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: ExportDatabaseDefinition,
        options?: DatabasesExportOptionalParams):
        Promise<DatabasesExportResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ExportDatabaseDefinition" />
          description: The database export request parameters.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesExportOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.DatabasesExportResponse" />&gt;
  - name: 'beginFailover(string, string, string, DatabasesFailoverOptionalParams)'
    uid: '@azure/arm-sql.Databases.beginFailover'
    package: '@azure/arm-sql'
    summary: Failovers a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginFailover(resourceGroupName: string, serverName: string,
        databaseName: string, options?: DatabasesFailoverOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to failover.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesFailoverOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginFailoverAndWait(string, string, string,
      DatabasesFailoverOptionalParams)
    uid: '@azure/arm-sql.Databases.beginFailoverAndWait'
    package: '@azure/arm-sql'
    summary: Failovers a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginFailoverAndWait(resourceGroupName: string, serverName:
        string, databaseName: string, options?:
        DatabasesFailoverOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to failover.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesFailoverOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginImport(string, string, string, ImportExistingDatabaseDefinition,
      DatabasesImportOptionalParams)
    uid: '@azure/arm-sql.Databases.beginImport'
    package: '@azure/arm-sql'
    summary: Imports a bacpac into a new database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginImport(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ImportExistingDatabaseDefinition,
        options?: DatabasesImportOptionalParams):
        Promise<PollerLike<PollOperationState<DatabasesImportResponse>,
        DatabasesImportResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ImportExistingDatabaseDefinition" />
          description: The database import request parameters.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesImportOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-sql.DatabasesImportResponse" />&gt;, <xref
          uid="@azure/arm-sql.DatabasesImportResponse" />&gt;&gt;
  - name: >-
      beginImportAndWait(string, string, string,
      ImportExistingDatabaseDefinition, DatabasesImportOptionalParams)
    uid: '@azure/arm-sql.Databases.beginImportAndWait'
    package: '@azure/arm-sql'
    summary: Imports a bacpac into a new database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginImportAndWait(resourceGroupName: string, serverName:
        string, databaseName: string, parameters:
        ImportExistingDatabaseDefinition, options?:
        DatabasesImportOptionalParams): Promise<DatabasesImportResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ImportExistingDatabaseDefinition" />
          description: The database import request parameters.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesImportOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.DatabasesImportResponse" />&gt;
  - name: 'beginPause(string, string, string, DatabasesPauseOptionalParams)'
    uid: '@azure/arm-sql.Databases.beginPause'
    package: '@azure/arm-sql'
    summary: Pauses a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPause(resourceGroupName: string, serverName: string,
        databaseName: string, options?: DatabasesPauseOptionalParams):
        Promise<PollerLike<PollOperationState<DatabasesPauseResponse>,
        DatabasesPauseResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be paused.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesPauseOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-sql.DatabasesPauseResponse" />&gt;, <xref
          uid="@azure/arm-sql.DatabasesPauseResponse" />&gt;&gt;
  - name: 'beginPauseAndWait(string, string, string, DatabasesPauseOptionalParams)'
    uid: '@azure/arm-sql.Databases.beginPauseAndWait'
    package: '@azure/arm-sql'
    summary: Pauses a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPauseAndWait(resourceGroupName: string, serverName:
        string, databaseName: string, options?: DatabasesPauseOptionalParams):
        Promise<DatabasesPauseResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be paused.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesPauseOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.DatabasesPauseResponse" />&gt;
  - name: 'beginResume(string, string, string, DatabasesResumeOptionalParams)'
    uid: '@azure/arm-sql.Databases.beginResume'
    package: '@azure/arm-sql'
    summary: Resumes a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginResume(resourceGroupName: string, serverName: string,
        databaseName: string, options?: DatabasesResumeOptionalParams):
        Promise<PollerLike<PollOperationState<DatabasesResumeResponse>,
        DatabasesResumeResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be resumed.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesResumeOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-sql.DatabasesResumeResponse" />&gt;, <xref
          uid="@azure/arm-sql.DatabasesResumeResponse" />&gt;&gt;
  - name: 'beginResumeAndWait(string, string, string, DatabasesResumeOptionalParams)'
    uid: '@azure/arm-sql.Databases.beginResumeAndWait'
    package: '@azure/arm-sql'
    summary: Resumes a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginResumeAndWait(resourceGroupName: string, serverName:
        string, databaseName: string, options?: DatabasesResumeOptionalParams):
        Promise<DatabasesResumeResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be resumed.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesResumeOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.DatabasesResumeResponse" />&gt;
  - name: >-
      beginUpdate(string, string, string, DatabaseUpdate,
      DatabasesUpdateOptionalParams)
    uid: '@azure/arm-sql.Databases.beginUpdate'
    package: '@azure/arm-sql'
    summary: Updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: DatabaseUpdate, options?:
        DatabasesUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<DatabasesUpdateResponse>,
        DatabasesUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.DatabaseUpdate" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-sql.DatabasesUpdateResponse" />&gt;, <xref
          uid="@azure/arm-sql.DatabasesUpdateResponse" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, DatabaseUpdate,
      DatabasesUpdateOptionalParams)
    uid: '@azure/arm-sql.Databases.beginUpdateAndWait'
    package: '@azure/arm-sql'
    summary: Updates an existing database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, serverName:
        string, databaseName: string, parameters: DatabaseUpdate, options?:
        DatabasesUpdateOptionalParams): Promise<DatabasesUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: parameters
          type: <xref uid="@azure/arm-sql.DatabaseUpdate" />
          description: The requested database resource state.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.DatabasesUpdateResponse" />&gt;
  - name: >-
      beginUpgradeDataWarehouse(string, string, string,
      DatabasesUpgradeDataWarehouseOptionalParams)
    uid: '@azure/arm-sql.Databases.beginUpgradeDataWarehouse'
    package: '@azure/arm-sql'
    summary: Upgrades a data warehouse.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeDataWarehouse(resourceGroupName: string,
        serverName: string, databaseName: string, options?:
        DatabasesUpgradeDataWarehouseOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be upgraded.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.DatabasesUpgradeDataWarehouseOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginUpgradeDataWarehouseAndWait(string, string, string,
      DatabasesUpgradeDataWarehouseOptionalParams)
    uid: '@azure/arm-sql.Databases.beginUpgradeDataWarehouseAndWait'
    package: '@azure/arm-sql'
    summary: Upgrades a data warehouse.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpgradeDataWarehouseAndWait(resourceGroupName: string,
        serverName: string, databaseName: string, options?:
        DatabasesUpgradeDataWarehouseOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to be upgraded.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.DatabasesUpgradeDataWarehouseOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, string, DatabasesGetOptionalParams)'
    uid: '@azure/arm-sql.Databases.get'
    package: '@azure/arm-sql'
    summary: Gets a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serverName: string,
        databaseName: string, options?: DatabasesGetOptionalParams):
        Promise<DatabasesGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-sql.DatabasesGetResponse" />&gt;
  - name: >-
      listByElasticPool(string, string, string,
      DatabasesListByElasticPoolOptionalParams)
    uid: '@azure/arm-sql.Databases.listByElasticPool'
    package: '@azure/arm-sql'
    summary: Gets a list of databases in an elastic pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByElasticPool(resourceGroupName: string, serverName:
        string, elasticPoolName: string, options?:
        DatabasesListByElasticPoolOptionalParams):
        PagedAsyncIterableIterator<Database>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: elasticPoolName
          type: string
          description: The name of the elastic pool.
        - id: options
          type: >-
            <xref uid="@azure/arm-sql.DatabasesListByElasticPoolOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-sql.Database"
          />&gt;
  - name: 'listByServer(string, string, DatabasesListByServerOptionalParams)'
    uid: '@azure/arm-sql.Databases.listByServer'
    package: '@azure/arm-sql'
    summary: Gets a list of databases.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByServer(resourceGroupName: string, serverName: string,
        options?: DatabasesListByServerOptionalParams):
        PagedAsyncIterableIterator<Database>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesListByServerOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-sql.Database"
          />&gt;
  - name: >-
      listInaccessibleByServer(string, string,
      DatabasesListInaccessibleByServerOptionalParams)
    uid: '@azure/arm-sql.Databases.listInaccessibleByServer'
    package: '@azure/arm-sql'
    summary: Gets a list of inaccessible databases in a logical server
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listInaccessibleByServer(resourceGroupName: string, serverName:
        string, options?: DatabasesListInaccessibleByServerOptionalParams):
        PagedAsyncIterableIterator<Database>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.DatabasesListInaccessibleByServerOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-sql.Database"
          />&gt;
  - name: >-
      listMetricDefinitions(string, string, string,
      DatabasesListMetricDefinitionsOptionalParams)
    uid: '@azure/arm-sql.Databases.listMetricDefinitions'
    package: '@azure/arm-sql'
    summary: Returns database metric definitions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetricDefinitions(resourceGroupName: string, serverName:
        string, databaseName: string, options?:
        DatabasesListMetricDefinitionsOptionalParams):
        PagedAsyncIterableIterator<MetricDefinition>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-sql.DatabasesListMetricDefinitionsOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-sql.MetricDefinition" />&gt;
  - name: >-
      listMetrics(string, string, string, string,
      DatabasesListMetricsOptionalParams)
    uid: '@azure/arm-sql.Databases.listMetrics'
    package: '@azure/arm-sql'
    summary: Returns database metrics.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listMetrics(resourceGroupName: string, serverName: string,
        databaseName: string, filter: string, options?:
        DatabasesListMetricsOptionalParams): PagedAsyncIterableIterator<Metric>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database.
        - id: filter
          type: string
          description: >-
            An OData filter expression that describes a subset of metrics to
            return.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesListMetricsOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-sql.Metric" />&gt;
  - name: >-
      rename(string, string, string, ResourceMoveDefinition,
      DatabasesRenameOptionalParams)
    uid: '@azure/arm-sql.Databases.rename'
    package: '@azure/arm-sql'
    summary: Renames a database.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function rename(resourceGroupName: string, serverName: string,
        databaseName: string, parameters: ResourceMoveDefinition, options?:
        DatabasesRenameOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: >-
            The name of the resource group that contains the resource. You can
            obtain
                                     this value from the Azure Resource Manager API or the portal.
        - id: serverName
          type: string
          description: The name of the server.
        - id: databaseName
          type: string
          description: The name of the database to rename.
        - id: parameters
          type: <xref uid="@azure/arm-sql.ResourceMoveDefinition" />
          description: The resource move definition for renaming this database.
        - id: options
          type: <xref uid="@azure/arm-sql.DatabasesRenameOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;

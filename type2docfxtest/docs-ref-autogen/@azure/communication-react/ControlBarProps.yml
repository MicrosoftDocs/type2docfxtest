### YamlMime:TSType
name: ControlBarProps
uid: '@azure/communication-react.ControlBarProps'
package: '@azure/communication-react'
summary: 'Props for <xref:ControlBar>.'
fullName: ControlBarProps
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: children
    uid: '@azure/communication-react.ControlBarProps.children'
    package: '@azure/communication-react'
    summary: React Child components.
    fullName: children
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'children?: React.ReactNode'
      return:
        description: ''
        type: <xref uid="React.ReactNode" />
  - name: layout
    uid: '@azure/communication-react.ControlBarProps.layout'
    package: '@azure/communication-react'
    summary: >-
      Changes the layout of the control bar.

      Available layouts are `horizontal`, `vertical`, `dockedTop`,
      `dockedBottom`,

      `dockedLeft`, `dockedRight`, `floatingTop`, `floatingBottom`,
      `floatingLeft`,

      `floatingRight`

      Defaults to a `horizontal` layout.
    fullName: layout
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'layout?: ControlBarLayout'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.ControlBarLayout" />
  - name: styles
    uid: '@azure/communication-react.ControlBarProps.styles'
    package: '@azure/communication-react'
    summary: |+
      Allows users to pass an object containing custom CSS styles.

      **Example**

      ```
      <ControlBar styles={{ root: { background: 'blue' } }} />
      ```

    fullName: styles
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'styles?: BaseCustomStyles'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.BaseCustomStyles" />

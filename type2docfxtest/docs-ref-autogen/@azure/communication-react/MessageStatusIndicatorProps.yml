### YamlMime:TSType
name: MessageStatusIndicatorProps
uid: '@azure/communication-react.MessageStatusIndicatorProps'
package: '@azure/communication-react'
summary: 'Props for <xref:MessageStatusIndicator>.'
fullName: MessageStatusIndicatorProps
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: onToggleToolTip
    uid: '@azure/communication-react.MessageStatusIndicatorProps.onToggleToolTip'
    package: '@azure/communication-react'
    summary: ''
    fullName: onToggleToolTip
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onToggleToolTip?: (isToggled: boolean) => void'
      return:
        description: ''
        type: '(isToggled: boolean) =&gt; void'
  - name: readCount
    uid: '@azure/communication-react.MessageStatusIndicatorProps.readCount'
    package: '@azure/communication-react'
    summary: ''
    fullName: readCount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'readCount?: number'
      return:
        description: ''
        type: number
  - name: remoteParticipantsCount
    uid: >-
      @azure/communication-react.MessageStatusIndicatorProps.remoteParticipantsCount
    package: '@azure/communication-react'
    summary: number of participants not including myself
    fullName: remoteParticipantsCount
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'remoteParticipantsCount?: number'
      return:
        description: ''
        type: number
  - name: status
    uid: '@azure/communication-react.MessageStatusIndicatorProps.status'
    package: '@azure/communication-react'
    summary: Message status that determines the icon to display.
    fullName: status
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'status?: MessageStatus'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.MessageStatus" />
  - name: strings
    uid: '@azure/communication-react.MessageStatusIndicatorProps.strings'
    package: '@azure/communication-react'
    summary: Optional strings to override in component
    fullName: strings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strings?: MessageStatusIndicatorStrings'
      return:
        description: ''
        type: >-
          <xref uid="@azure/communication-react.MessageStatusIndicatorStrings"
          />
  - name: styles
    uid: '@azure/communication-react.MessageStatusIndicatorProps.styles'
    package: '@azure/communication-react'
    summary: |+
      Allows users to pass an object containing custom CSS styles.

      **Example**

      ```
      <MessageStatus styles={{ root: { background: 'blue' } }} />
      ```

    fullName: styles
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: BaseCustomStyles'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.BaseCustomStyles" />

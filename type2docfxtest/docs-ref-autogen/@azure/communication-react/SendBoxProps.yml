### YamlMime:TSType
name: SendBoxProps
uid: '@azure/communication-react.SendBoxProps'
package: '@azure/communication-react'
summary: 'Props for <xref:SendBox>.'
fullName: SendBoxProps
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: autoFocus
    uid: '@azure/communication-react.SendBoxProps.autoFocus'
    package: '@azure/communication-react'
    summary: |-
      enumerable to determine if the input box has focus on render or not.
      When undefined nothing has focus on render
    fullName: autoFocus
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'autoFocus?: "sendBoxTextField"'
      return:
        description: ''
        type: '"sendBoxTextField"'
  - name: disabled
    uid: '@azure/communication-react.SendBoxProps.disabled'
    package: '@azure/communication-react'
    summary: Optional boolean to disable text box
    fullName: disabled
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'disabled?: boolean'
      return:
        description: ''
        type: boolean
  - name: onRenderIcon
    uid: '@azure/communication-react.SendBoxProps.onRenderIcon'
    package: '@azure/communication-react'
    summary: Optional callback to render send button icon to the right of the SendBox.
    fullName: onRenderIcon
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderIcon?: (isHover: boolean) => Element'
      return:
        description: ''
        type: '(isHover: boolean) =&gt; Element'
  - name: onRenderSystemMessage
    uid: '@azure/communication-react.SendBoxProps.onRenderSystemMessage'
    package: '@azure/communication-react'
    summary: Optional callback to render system message below the SendBox.
    fullName: onRenderSystemMessage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRenderSystemMessage?: (systemMessage: string | undefined) =>
        React.ReactElement
      return:
        description: ''
        type: >-
          (systemMessage: string | undefined) =&gt; <xref
          uid="React.ReactElement" />
  - name: onSendMessage
    uid: '@azure/communication-react.SendBoxProps.onSendMessage'
    package: '@azure/communication-react'
    summary: Optional callback called when message is sent
    fullName: onSendMessage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onSendMessage?: (content: string) => Promise<void>'
      return:
        description: ''
        type: '(content: string) =&gt; Promise&lt;void&gt;'
  - name: onTyping
    uid: '@azure/communication-react.SendBoxProps.onTyping'
    package: '@azure/communication-react'
    summary: Optional callback called when user is typing
    fullName: onTyping
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onTyping?: () => Promise<void>'
      return:
        description: ''
        type: () =&gt; Promise&lt;void&gt;
  - name: strings
    uid: '@azure/communication-react.SendBoxProps.strings'
    package: '@azure/communication-react'
    summary: Optional strings to override in component
    fullName: strings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strings?: Partial<SendBoxStrings>'
      return:
        description: ''
        type: >-
          Partial&lt;<xref uid="@azure/communication-react.SendBoxStrings"
          />&gt;
  - name: styles
    uid: '@azure/communication-react.SendBoxProps.styles'
    package: '@azure/communication-react'
    summary: |+
      Allows users to pass in an object contains custom CSS styles.

      **Example**

      ```
      <SendBox styles={{ root: { background: 'blue' } }} />
      ```

    fullName: styles
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: SendBoxStylesProps'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.SendBoxStylesProps" />
  - name: supportNewline
    uid: '@azure/communication-react.SendBoxProps.supportNewline'
    package: '@azure/communication-react'
    summary: Optional boolean to support new line in SendBox.
    fullName: supportNewline
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'supportNewline?: boolean'
      return:
        description: ''
        type: boolean
  - name: systemMessage
    uid: '@azure/communication-react.SendBoxProps.systemMessage'
    package: '@azure/communication-react'
    summary: Optional text for system message below text box
    fullName: systemMessage
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'systemMessage?: string'
      return:
        description: ''
        type: string

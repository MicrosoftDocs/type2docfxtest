### YamlMime:TSType
name: VideoGalleryProps
uid: '@azure/communication-react.VideoGalleryProps'
package: '@azure/communication-react'
summary: 'Props for <xref:VideoGallery>.'
fullName: VideoGalleryProps
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: dominantSpeakers
    uid: '@azure/communication-react.VideoGalleryProps.dominantSpeakers'
    package: '@azure/communication-react'
    summary: >-
      List of dominant speaker userIds in the order of their dominance. 0th
      index is the most dominant.
    fullName: dominantSpeakers
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'dominantSpeakers?: string[]'
      return:
        description: ''
        type: 'string[]'
  - name: layout
    uid: '@azure/communication-react.VideoGalleryProps.layout'
    package: '@azure/communication-react'
    summary: Layout of the video tiles.
    fullName: layout
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'layout?: VideoGalleryLayout'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoGalleryLayout" />
  - name: localParticipant
    uid: '@azure/communication-react.VideoGalleryProps.localParticipant'
    package: '@azure/communication-react'
    summary: Local video particpant
    fullName: localParticipant
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'localParticipant: VideoGalleryLocalParticipant'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoGalleryLocalParticipant" />
  - name: localVideoCameraCycleButtonProps
    uid: >-
      @azure/communication-react.VideoGalleryProps.localVideoCameraCycleButtonProps
    package: '@azure/communication-react'
    summary: Camera control information for button to switch cameras.
    fullName: localVideoCameraCycleButtonProps
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'localVideoCameraCycleButtonProps?: LocalVideoCameraCycleButtonProps'
      return:
        description: ''
        type: >-
          <xref
          uid="@azure/communication-react.LocalVideoCameraCycleButtonProps" />
  - name: localVideoViewOptions
    uid: '@azure/communication-react.VideoGalleryProps.localVideoViewOptions'
    package: '@azure/communication-react'
    summary: Local video view options
    fullName: localVideoViewOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'localVideoViewOptions?: VideoStreamOptions'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoStreamOptions" />
  - name: maxRemoteVideoStreams
    uid: '@azure/communication-react.VideoGalleryProps.maxRemoteVideoStreams'
    package: '@azure/communication-react'
    summary: Maximum number of participant remote video streams that is rendered.
    fullName: maxRemoteVideoStreams
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxRemoteVideoStreams?: number'
      return:
        description: ''
        type: number
  - name: onCreateLocalStreamView
    uid: '@azure/communication-react.VideoGalleryProps.onCreateLocalStreamView'
    package: '@azure/communication-react'
    summary: Callback to create the local video stream view
    fullName: onCreateLocalStreamView
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCreateLocalStreamView?: (options?: VideoStreamOptions) => Promise<void
        | CreateVideoStreamViewResult>
      return:
        description: ''
        type: >-
          (options?: VideoStreamOptions) =&gt; Promise&lt;void |
          CreateVideoStreamViewResult&gt;
  - name: onCreateRemoteStreamView
    uid: '@azure/communication-react.VideoGalleryProps.onCreateRemoteStreamView'
    package: '@azure/communication-react'
    summary: Callback to create a remote video stream view
    fullName: onCreateRemoteStreamView
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onCreateRemoteStreamView?: (userId: string, options?:
        VideoStreamOptions) => Promise<void | CreateVideoStreamViewResult>
      return:
        description: ''
        type: >-
          (userId: string, options?: VideoStreamOptions) =&gt; Promise&lt;void |
          CreateVideoStreamViewResult&gt;
  - name: onDisposeLocalStreamView
    uid: '@azure/communication-react.VideoGalleryProps.onDisposeLocalStreamView'
    package: '@azure/communication-react'
    summary: Callback to dispose of the local video stream view
    fullName: onDisposeLocalStreamView
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDisposeLocalStreamView?: () => void'
      return:
        description: ''
        type: () =&gt; void
  - name: onDisposeRemoteStreamView
    uid: '@azure/communication-react.VideoGalleryProps.onDisposeRemoteStreamView'
    package: '@azure/communication-react'
    summary: Callback to dispose a remote video stream view
    fullName: onDisposeRemoteStreamView
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onDisposeRemoteStreamView?: (userId: string) => Promise<void>'
      return:
        description: ''
        type: '(userId: string) =&gt; Promise&lt;void&gt;'
  - name: onRenderAvatar
    uid: '@azure/communication-react.VideoGalleryProps.onRenderAvatar'
    package: '@azure/communication-react'
    summary: Callback to render a particpant avatar
    fullName: onRenderAvatar
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onRenderAvatar?: OnRenderAvatarCallback'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.OnRenderAvatarCallback" />
  - name: onRenderLocalVideoTile
    uid: '@azure/communication-react.VideoGalleryProps.onRenderLocalVideoTile'
    package: '@azure/communication-react'
    summary: Callback to render the local video tile
    fullName: onRenderLocalVideoTile
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRenderLocalVideoTile?: (localParticipant:
        VideoGalleryLocalParticipant) => Element
      return:
        description: ''
        type: '(localParticipant: VideoGalleryLocalParticipant) =&gt; Element'
  - name: onRenderRemoteVideoTile
    uid: '@azure/communication-react.VideoGalleryProps.onRenderRemoteVideoTile'
    package: '@azure/communication-react'
    summary: Callback to render a remote video tile
    fullName: onRenderRemoteVideoTile
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        onRenderRemoteVideoTile?: (remoteParticipant:
        VideoGalleryRemoteParticipant) => Element
      return:
        description: ''
        type: '(remoteParticipant: VideoGalleryRemoteParticipant) =&gt; Element'
  - name: remoteParticipants
    uid: '@azure/communication-react.VideoGalleryProps.remoteParticipants'
    package: '@azure/communication-react'
    summary: List of remote video particpants
    fullName: remoteParticipants
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'remoteParticipants?: VideoGalleryRemoteParticipant[]'
      return:
        description: ''
        type: >-
          <xref uid="@azure/communication-react.VideoGalleryRemoteParticipant"
          />[]
  - name: remoteVideoViewOptions
    uid: '@azure/communication-react.VideoGalleryProps.remoteVideoViewOptions'
    package: '@azure/communication-react'
    summary: Remote videos view options
    fullName: remoteVideoViewOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'remoteVideoViewOptions?: VideoStreamOptions'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoStreamOptions" />
  - name: showCameraSwitcherInLocalPreview
    uid: >-
      @azure/communication-react.VideoGalleryProps.showCameraSwitcherInLocalPreview
    package: '@azure/communication-react'
    summary: Whether to display the local video camera switcher button
    fullName: showCameraSwitcherInLocalPreview
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showCameraSwitcherInLocalPreview?: boolean'
      return:
        description: ''
        type: boolean
  - name: showMuteIndicator
    uid: '@azure/communication-react.VideoGalleryProps.showMuteIndicator'
    package: '@azure/communication-react'
    summary: Whether to display a mute icon beside the user's display name.
    fullName: showMuteIndicator
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'showMuteIndicator?: boolean'
      return:
        description: ''
        type: boolean
  - name: strings
    uid: '@azure/communication-react.VideoGalleryProps.strings'
    package: '@azure/communication-react'
    summary: Optional strings to override in component
    fullName: strings
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'strings?: Partial<VideoGalleryStrings>'
      return:
        description: ''
        type: >-
          Partial&lt;<xref uid="@azure/communication-react.VideoGalleryStrings"
          />&gt;
  - name: styles
    uid: '@azure/communication-react.VideoGalleryProps.styles'
    package: '@azure/communication-react'
    summary: >+
      Allows users to pass an object containing custom CSS styles for the
      gallery container.


      **Example**


      ```

      <VideoGallery styles={{ root: { border: 'solid 1px red' } }} />

      ```

    fullName: styles
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'styles?: VideoGalleryStyles'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.VideoGalleryStyles" />

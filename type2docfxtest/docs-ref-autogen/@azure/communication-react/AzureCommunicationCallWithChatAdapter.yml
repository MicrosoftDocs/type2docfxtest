### YamlMime:TSType
name: AzureCommunicationCallWithChatAdapter
uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter'
package: '@azure/communication-react'
summary: |-
  CallWithChat adapter backed by Azure Communication Services.
  Created for easy use with the <xref:CallWithChatComposite>.
fullName: AzureCommunicationCallWithChatAdapter
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: 'AzureCommunicationCallWithChatAdapter(CallAdapter, ChatAdapter)'
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.constructor
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        new AzureCommunicationCallWithChatAdapter(callAdapter: CallAdapter,
        chatAdapter: ChatAdapter)
      parameters:
        - id: callAdapter
          type: <xref uid="@azure/communication-react.CallAdapter" />
          description: ''
        - id: chatAdapter
          type: <xref uid="@azure/communication-react.ChatAdapter" />
          description: ''
methods:
  - name: askDevicePermission(PermissionConstraints)
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.askDevicePermission
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function askDevicePermission(constraints: PermissionConstraints):
        Promise<void>
      parameters:
        - id: constraints
          type: PermissionConstraints
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'createStreamView(string, VideoStreamOptions)'
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.createStreamView
    package: '@azure/communication-react'
    summary: Create a stream view for a remote participants video feed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createStreamView(remoteUserId?: string, options?:
        VideoStreamOptions): Promise<void | CreateVideoStreamViewResult>
      parameters:
        - id: remoteUserId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        description: ''
        type: >-
          Promise&lt;void | <xref
          uid="@azure/communication-react.CreateVideoStreamViewResult" />&gt;
  - name: deleteMessage(string)
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.deleteMessage
    package: '@azure/communication-react'
    summary: Delete an existing message.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function deleteMessage(messageId: string): Promise<void>'
      parameters:
        - id: messageId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: dispose()
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.dispose'
    package: '@azure/communication-react'
    summary: Dispose of the current CallWithChatAdapter.
    remarks: ''
    isDeprecated: false
    syntax:
      content: function dispose()
  - name: 'disposeStreamView(string, VideoStreamOptions)'
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.disposeStreamView
    package: '@azure/communication-react'
    summary: Dispose of a created stream view of a remote participants video feed.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function disposeStreamView(remoteUserId?: string, options?:
        VideoStreamOptions): Promise<void>
      parameters:
        - id: remoteUserId
          type: string
          description: ''
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: fetchInitialData()
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.fetchInitialData
    package: '@azure/communication-react'
    summary: Fetch initial Call and Chat data such as chat messages.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function fetchInitialData(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: getState()
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.getState'
    package: '@azure/communication-react'
    summary: Get current Call and Chat state.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getState(): CallWithChatAdapterState'
      return:
        description: ''
        type: <xref uid="@azure/communication-react.CallWithChatAdapterState" />
  - name: joinCall(boolean)
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.joinCall'
    package: '@azure/communication-react'
    summary: Join existing Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function joinCall(microphoneOn?: boolean): Call | undefined'
      parameters:
        - id: microphoneOn
          type: boolean
          description: ''
      return:
        description: ''
        type: Call | undefined
  - name: leaveCall(boolean)
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.leaveCall'
    package: '@azure/communication-react'
    summary: Leave current Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function leaveCall(forEveryone?: boolean): Promise<void>'
      parameters:
        - id: forEveryone
          type: boolean
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: loadPreviousChatMessages(number)
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.loadPreviousChatMessages
    package: '@azure/communication-react'
    summary: Load previous Chat messages.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function loadPreviousChatMessages(messagesToLoad: number):
        Promise<boolean>
      parameters:
        - id: messagesToLoad
          type: number
          description: ''
      return:
        description: ''
        type: Promise&lt;boolean&gt;
  - name: mute()
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.mute'
    package: '@azure/communication-react'
    summary: Mute the user in the Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function mute(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'off("callEnded", CallEndedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"callEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
  - name: 'off("callError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"callError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
  - name: 'off("callIdChanged", CallIdChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
  - name: 'off("callParticipantsJoined", ParticipantsJoinedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "callParticipantsJoined", listener:
        ParticipantsJoinedListener)
      parameters:
        - id: event
          type: '"callParticipantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsJoinedListener" />
          description: ''
  - name: 'off("callParticipantsLeft", ParticipantsLeftListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "callParticipantsLeft", listener:
        ParticipantsLeftListener)
      parameters:
        - id: event
          type: '"callParticipantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsLeftListener" />
          description: ''
  - name: 'off("chatError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_16'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "chatError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"chatError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
  - name: 'off("chatParticipantsAdded", ParticipantsAddedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_14'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "chatParticipantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"chatParticipantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
  - name: 'off("chatParticipantsRemoved", ParticipantsRemovedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_15'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "chatParticipantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"chatParticipantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
  - name: 'off("displayNameChanged", DisplayNameChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_7'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
  - name: >-
      off("isLocalScreenSharingActiveChanged",
      IsLocalScreenSharingActiveChangedListener)
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isLocalScreenSharingActiveChanged", listener:
        IsLocalScreenSharingActiveChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsLocalScreenSharingActiveChangedListener"
            />
          description: ''
  - name: 'off("isMutedChanged", IsMutedChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "isMutedChanged", listener: IsMutedChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMutedChangedListener" />
          description: ''
  - name: 'off("isSpeakingChanged", IsSpeakingChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_8'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
  - name: 'off("messageRead", MessageReadListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_13'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
  - name: 'off("messageReceived", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_11'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "messageReceived", listener:
        MessageReceivedListener)
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'off("messageSent", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_12'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function off(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'off("selectedMicrophoneChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_9'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "selectedMicrophoneChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedMicrophoneChanged"'
          description: ''
        - id: listener
          type: PropertyChangedEvent
          description: ''
  - name: 'off("selectedSpeakerChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.off_10'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function off(event: "selectedSpeakerChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedSpeakerChanged"'
          description: ''
        - id: listener
          type: PropertyChangedEvent
          description: ''
  - name: 'offStateChange((state: CallWithChatAdapterState) => void)'
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.offStateChange
    package: '@azure/communication-react'
    summary: Unsubscribe to state change events.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function offStateChange(handler: (state: CallWithChatAdapterState) =>
        void)
      parameters:
        - id: handler
          type: '(state: CallWithChatAdapterState) =&gt; void'
          description: |
            handler to be no longer called when state changes.
  - name: 'on("callEnded", CallEndedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_2'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "callEnded", listener: CallEndedListener)'
      parameters:
        - id: event
          type: '"callEnded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallEndedListener" />
          description: ''
  - name: 'on("callError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_3'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "callError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"callError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
  - name: 'on("callIdChanged", CallIdChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_5'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "callIdChanged", listener: CallIdChangedListener)'
      parameters:
        - id: event
          type: '"callIdChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.CallIdChangedListener" />
          description: ''
  - name: 'on("callParticipantsJoined", ParticipantsJoinedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "callParticipantsJoined", listener:
        ParticipantsJoinedListener)
      parameters:
        - id: event
          type: '"callParticipantsJoined"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsJoinedListener" />
          description: ''
  - name: 'on("callParticipantsLeft", ParticipantsLeftListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_1'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "callParticipantsLeft", listener:
        ParticipantsLeftListener)
      parameters:
        - id: event
          type: '"callParticipantsLeft"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsLeftListener" />
          description: ''
  - name: 'on("chatError", (e: AdapterError) => void)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_16'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "chatError", listener: (e: AdapterError) => void)'
      parameters:
        - id: event
          type: '"chatError"'
          description: ''
        - id: listener
          type: '(e: AdapterError) =&gt; void'
          description: ''
  - name: 'on("chatParticipantsAdded", ParticipantsAddedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_12'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "chatParticipantsAdded", listener:
        ParticipantsAddedListener)
      parameters:
        - id: event
          type: '"chatParticipantsAdded"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.ParticipantsAddedListener" />
          description: ''
  - name: 'on("chatParticipantsRemoved", ParticipantsRemovedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_13'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "chatParticipantsRemoved", listener:
        ParticipantsRemovedListener)
      parameters:
        - id: event
          type: '"chatParticipantsRemoved"'
          description: ''
        - id: listener
          type: >-
            <xref uid="@azure/communication-react.ParticipantsRemovedListener"
            />
          description: ''
  - name: 'on("displayNameChanged", DisplayNameChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_7'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "displayNameChanged", listener:
        DisplayNameChangedListener)
      parameters:
        - id: event
          type: '"displayNameChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.DisplayNameChangedListener" />
          description: ''
  - name: >-
      on("isLocalScreenSharingActiveChanged",
      IsLocalScreenSharingActiveChangedListener)
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_6'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isLocalScreenSharingActiveChanged", listener:
        IsLocalScreenSharingActiveChangedListener)
      parameters:
        - id: event
          type: '"isLocalScreenSharingActiveChanged"'
          description: ''
        - id: listener
          type: >-
            <xref
            uid="@azure/communication-react.IsLocalScreenSharingActiveChangedListener"
            />
          description: ''
  - name: 'on("isMutedChanged", IsMutedChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_4'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "isMutedChanged", listener: IsMutedChangedListener)'
      parameters:
        - id: event
          type: '"isMutedChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsMutedChangedListener" />
          description: ''
  - name: 'on("isSpeakingChanged", IsSpeakingChangedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_8'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "isSpeakingChanged", listener:
        IsSpeakingChangedListener)
      parameters:
        - id: event
          type: '"isSpeakingChanged"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.IsSpeakingChangedListener" />
          description: ''
  - name: 'on("messageRead", MessageReadListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_11'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageRead", listener: MessageReadListener)'
      parameters:
        - id: event
          type: '"messageRead"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReadListener" />
          description: ''
  - name: 'on("messageReceived", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_9'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageReceived", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageReceived"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'on("messageSent", MessageReceivedListener)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_10'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function on(event: "messageSent", listener: MessageReceivedListener)'
      parameters:
        - id: event
          type: '"messageSent"'
          description: ''
        - id: listener
          type: <xref uid="@azure/communication-react.MessageReceivedListener" />
          description: ''
  - name: 'on("selectedMicrophoneChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_14'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "selectedMicrophoneChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedMicrophoneChanged"'
          description: ''
        - id: listener
          type: PropertyChangedEvent
          description: ''
  - name: 'on("selectedSpeakerChanged", PropertyChangedEvent)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.on_15'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function on(event: "selectedSpeakerChanged", listener:
        PropertyChangedEvent)
      parameters:
        - id: event
          type: '"selectedSpeakerChanged"'
          description: ''
        - id: listener
          type: PropertyChangedEvent
          description: ''
  - name: 'onStateChange((state: CallWithChatAdapterState) => void)'
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.onStateChange
    package: '@azure/communication-react'
    summary: Subscribe to state change events.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function onStateChange(handler: (state: CallWithChatAdapterState) =>
        void)
      parameters:
        - id: handler
          type: '(state: CallWithChatAdapterState) =&gt; void'
          description: >
            handler to be called when the state changes. This is passed the new
            state.
  - name: queryCameras()
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.queryCameras
    package: '@azure/communication-react'
    summary: Query for available cameras.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function queryCameras(): Promise<VideoDeviceInfo[]>'
      return:
        description: ''
        type: 'Promise&lt;VideoDeviceInfo[]&gt;'
  - name: queryMicrophones()
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.queryMicrophones
    package: '@azure/communication-react'
    summary: Query for available microphones.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function queryMicrophones(): Promise<AudioDeviceInfo[]>'
      return:
        description: ''
        type: 'Promise&lt;AudioDeviceInfo[]&gt;'
  - name: querySpeakers()
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.querySpeakers
    package: '@azure/communication-react'
    summary: Query for available speakers.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function querySpeakers(): Promise<AudioDeviceInfo[]>'
      return:
        description: ''
        type: 'Promise&lt;AudioDeviceInfo[]&gt;'
  - name: removeParticipant(string)
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.removeParticipant
    package: '@azure/communication-react'
    summary: Remove a participant from the Call only.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeParticipant(userId: string): Promise<void>'
      parameters:
        - id: userId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendMessage(string)
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.sendMessage
    package: '@azure/communication-react'
    summary: Send a chat message.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function sendMessage(content: string): Promise<void>'
      parameters:
        - id: content
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendReadReceipt(string)
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.sendReadReceipt
    package: '@azure/communication-react'
    summary: Send a chat read receipt.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function sendReadReceipt(chatMessageId: string): Promise<void>'
      parameters:
        - id: chatMessageId
          type: string
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: sendTypingIndicator()
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.sendTypingIndicator
    package: '@azure/communication-react'
    summary: Send an isTyping indicator.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function sendTypingIndicator(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'setCamera(VideoDeviceInfo, VideoStreamOptions)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.setCamera'
    package: '@azure/communication-react'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function setCamera(device: VideoDeviceInfo, options?:
        VideoStreamOptions): Promise<void>
      parameters:
        - id: device
          type: VideoDeviceInfo
          description: ''
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: setMicrophone(AudioDeviceInfo)
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.setMicrophone
    package: '@azure/communication-react'
    summary: Set the microphone to be used in the Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setMicrophone(device: AudioDeviceInfo): Promise<void>'
      parameters:
        - id: device
          type: AudioDeviceInfo
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: setSpeaker(AudioDeviceInfo)
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.setSpeaker
    package: '@azure/communication-react'
    summary: Set the speaker to be used in the Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setSpeaker(device: AudioDeviceInfo): Promise<void>'
      parameters:
        - id: device
          type: AudioDeviceInfo
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'startCall(string[], StartCallOptions)'
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.startCall'
    package: '@azure/communication-react'
    summary: Start a new Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function startCall(participants: string[], options?: StartCallOptions):
        Call | undefined
      parameters:
        - id: participants
          type: 'string[]'
          description: ''
        - id: options
          type: StartCallOptions
          description: ''
      return:
        description: ''
        type: Call | undefined
  - name: startCamera(VideoStreamOptions)
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.startCamera
    package: '@azure/communication-react'
    summary: Start the camera for the user in the Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startCamera(options?: VideoStreamOptions): Promise<void>'
      parameters:
        - id: options
          type: <xref uid="@azure/communication-react.VideoStreamOptions" />
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: startScreenShare()
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.startScreenShare
    package: '@azure/communication-react'
    summary: Trigger the user to start screen share.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function startScreenShare(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: stopCamera()
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.stopCamera
    package: '@azure/communication-react'
    summary: Stop the camera for the user in the Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopCamera(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: stopScreenShare()
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.stopScreenShare
    package: '@azure/communication-react'
    summary: Stop the current active screen share.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function stopScreenShare(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: unmute()
    uid: '@azure/communication-react.AzureCommunicationCallWithChatAdapter.unmute'
    package: '@azure/communication-react'
    summary: Unmute the user in the Call.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function unmute(): Promise<void>'
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'updateMessage(string, string, Record<string, string>)'
    uid: >-
      @azure/communication-react.AzureCommunicationCallWithChatAdapter.updateMessage
    package: '@azure/communication-react'
    summary: Update an existing message.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function updateMessage(messageId: string, content: string, metadata?:
        Record<string, string>): Promise<void>
      parameters:
        - id: messageId
          type: string
          description: ''
        - id: content
          type: string
          description: ''
        - id: metadata
          type: 'Record&lt;string, string&gt;'
          description: ''
      return:
        description: ''
        type: Promise&lt;void&gt;

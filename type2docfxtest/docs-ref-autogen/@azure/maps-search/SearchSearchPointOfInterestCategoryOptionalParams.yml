### YamlMime:TSType
name: SearchSearchPointOfInterestCategoryOptionalParams
uid: '@azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams'
package: '@azure/maps-search'
summary: Optional parameters.
fullName: SearchSearchPointOfInterestCategoryOptionalParams
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: brandFilter
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.brandFilter
    package: '@azure/maps-search'
    summary: >
      A comma-separated list of brand names which could be used to restrict the
      result to specific brands. Item order does not matter. When multiple
      brands are provided, only results that belong to (at least) one of the
      provided list will be returned. Brands that contain a "," in their name
      should be put into quotes.

      Usage examples:

       brandSet=Foo

       brandSet=Foo,Bar

       brandSet="A,B,C Comma",Bar
    fullName: brandFilter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'brandFilter?: string[]'
      return:
        description: ''
        type: 'string[]'
  - name: btmRight
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.btmRight
    package: '@azure/maps-search'
    summary: 'Bottom right position of the bounding box. E.g. 37.553,-122.453'
    fullName: btmRight
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'btmRight?: string'
      return:
        description: ''
        type: string
  - name: categoryFilter
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.categoryFilter
    package: '@azure/maps-search'
    summary: >
      A comma-separated list of category set IDs which could be used to restrict
      the result to specific Points of Interest categories. ID order does not
      matter. When multiple category identifiers are provided, only POIs that
      belong to (at least) one of the categories from the provided list will be
      returned. The list of supported categories can be discovered using  [POI
      Categories API](https://aka.ms/AzureMapsPOICategoryTree). Usage examples:

      * **categorySet=7315** (Search Points of Interest from category
      Restaurant)


      * **categorySet=7315025,7315017** (Search Points of Interest of category
      either Italian or French Restaurant)
    fullName: categoryFilter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'categoryFilter?: number[]'
      return:
        description: ''
        type: 'number[]'
  - name: countryCodeFilter
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.countryCodeFilter
    package: '@azure/maps-search'
    summary: >-
      Comma separated string of country codes, e.g. FR,ES. This will limit the
      search to the specified countries
    fullName: countryCodeFilter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'countryCodeFilter?: string[]'
      return:
        description: ''
        type: 'string[]'
  - name: electricVehicleConnectorFilter
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.electricVehicleConnectorFilter
    package: '@azure/maps-search'
    summary: >
      A comma-separated list of connector types which could be used to restrict
      the result to Electric Vehicle Station supporting specific connector
      types. Item order does not matter. When multiple connector types are
      provided, only results that belong to (at least) one of the provided list
      will be returned.

      Available connector types are:
        * `StandardHouseholdCountrySpecific` - These are the standard household connectors for a certain region. They are all AC single phase and the standard Voltage and standard Amperage. See also: [Plug & socket types - World Standards](https://www.worldstandards.eu/electricity/plugs-and-sockets).
        * `IEC62196Type1` - Type 1 connector as defined in the IEC 62196-2 standard. Also called Yazaki after the original manufacturer or SAE J1772 after the standard that first published it. Mostly used in combination with 120V single phase or up to 240V single phase infrastructure.
        * `IEC62196Type1CCS` - Type 1 based combo connector as defined in the IEC 62196-3 standard. The connector is based on the Type 1 connector – as defined in the IEC 62196-2 standard – with two additional direct current (DC) contacts to allow DC fast charging.
        * `IEC62196Type2CableAttached` - Type 2 connector as defined in the IEC 62196-2 standard. Provided as a cable and plug attached to the charging point.
        * `IEC62196Type2Outlet` - Type 2 connector as defined in the IEC 62196-2 standard. Provided as a socket set into the charging point.
        * `IEC62196Type2CCS` - Type 2 based combo connector as defined in the IEC 62196-3 standard. The connector is based on the Type 2 connector – as defined in the IEC 62196-2 standard – with two additional direct current (DC) contacts to allow DC fast charging.
        * `IEC62196Type3` - Type 3 connector as defined in the IEC 62196-2 standard. Also called Scame after the original manufacturer. Mostly used in combination with up to 240V single phase or up to 420V three phase infrastructure.
        * `Chademo` - CHAdeMO connector named after an association formed by the Tokyo Electric Power Company and industrial partners. Because of this is is also known as the TEPCO's connector. It supports fast DC charging.
        * `IEC60309AC1PhaseBlue` - Industrial Blue connector is a connector defined in the IEC 60309 standard. It is sometime referred to as by some combination of the standard, the color and the fact that is a single phase connector. The connector usually has the "P+N+E, 6h" configuration.
        * `IEC60309DCWhite` - Industrial White connector is a DC connector defined in the IEC 60309 standard.
        * `Tesla` - The Tesla connector is the regionally specific Tesla Supercharger connector. I.e. it refers to either Tesla's proprietary connector, sometimes referred to as Tesla Port mostly limited to North America or the modified Type 2 (DC over Type 2) in Europe.

      Usage examples:

       connectorSet=IEC62196Type2CableAttached
       connectorSet=IEC62196Type2Outlet,IEC62196Type2CableAttached
    fullName: electricVehicleConnectorFilter
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'electricVehicleConnectorFilter?: ElectricVehicleConnector[]'
      return:
        description: ''
        type: '<xref uid="@azure/maps-search.ElectricVehicleConnector" />[]'
  - name: extendedPostalCodesFor
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.extendedPostalCodesFor
    package: '@azure/maps-search'
    summary: >
      Indexes for which extended postal codes should be included in the results.

      Available indexes are:

       **Addr** = Address ranges

       **Geo** = Geographies

       **PAD** = Point Addresses

       **POI** = Points of Interest

       **Str** = Streets

       **XStr** = Cross Streets (intersections)

      Value should be a comma separated list of index types (in any order) or
      **None** for no indexes.


      By default extended postal codes are included for all indexes except Geo.
      Extended postal code lists for geographies can be quite long so they have
      to be explicitly requested when needed.


      Usage examples:

       extendedPostalCodesFor=POI

       extendedPostalCodesFor=PAD,Addr,POI

       extendedPostalCodesFor=None

      Extended postal code is returned as an **extendedPostalCode** property of
      an address. Availability is region-dependent.
    fullName: extendedPostalCodesFor
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'extendedPostalCodesFor?: SearchIndexes[]'
      return:
        description: ''
        type: '<xref uid="@azure/maps-search.SearchIndexes" />[]'
  - name: isTypeAhead
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.isTypeAhead
    package: '@azure/maps-search'
    summary: >-
      Boolean. If the typeahead flag is set, the query will be interpreted as a
      partial input and the search will enter predictive mode
    fullName: isTypeAhead
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'isTypeAhead?: boolean'
      return:
        description: ''
        type: boolean
  - name: language
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.language
    package: '@azure/maps-search'
    summary: >
      Language in which search results should be returned. Should be one of
      supported IETF language tags, case insensitive. When data in specified
      language is not available for a specific field, default language is used.

      Please refer to [Supported
      Languages](https://docs.microsoft.com/azure/azure-maps/supported-languages)
      for details.
    fullName: language
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'language?: string'
      return:
        description: ''
        type: string
  - name: lat
    uid: '@azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.lat'
    package: '@azure/maps-search'
    summary: Latitude where results should be biased. E.g. 37.337
    fullName: lat
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lat?: number'
      return:
        description: ''
        type: number
  - name: localizedMapView
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.localizedMapView
    package: '@azure/maps-search'
    summary: >
      The View parameter (also called the "user region" parameter) allows you to
      show the correct maps for a certain country/region for geopolitically
      disputed regions. Different countries have different views of such
      regions, and the View parameter allows your application to comply with the
      view required by the country your application will be serving. By default,
      the View parameter is set to “Unified” even if you haven’t defined it in 
      the request. It is your responsibility to determine the location of your
      users, and then set the View parameter correctly for that location.
      Alternatively, you have the option to set ‘View=Auto’, which will return
      the map data based on the IP  address of the request. The View parameter
      in Azure Maps must be used in compliance with applicable laws, including
      those  regarding mapping, of the country where maps, images and other data
      and third party content that you are authorized to  access via Azure Maps
      is made available. Example: view=IN.

      Please refer to [Supported
      Views](https://aka.ms/AzureMapsLocalizationViews) for details and to see
      the available Views.
    fullName: localizedMapView
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'localizedMapView?: LocalizedMapView'
      return:
        description: ''
        type: <xref uid="@azure/maps-search.LocalizedMapView" />
  - name: lon
    uid: '@azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.lon'
    package: '@azure/maps-search'
    summary: Longitude where results should be biased. E.g. -121.89
    fullName: lon
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'lon?: number'
      return:
        description: ''
        type: number
  - name: operatingHours
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.operatingHours
    package: '@azure/maps-search'
    summary: >-
      Hours of operation for a POI (Points of Interest). The availability of
      hours of operation will vary based on the data available. If not passed,
      then no opening hours information will be returned.

      Supported value: nextSevenDays
    fullName: operatingHours
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'operatingHours?: OperatingHoursRange'
      return:
        description: ''
        type: <xref uid="@azure/maps-search.OperatingHoursRange" />
  - name: radiusInMeters
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.radiusInMeters
    package: '@azure/maps-search'
    summary: >-
      The radius in meters to for the results to be constrained to the defined
      area
    fullName: radiusInMeters
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'radiusInMeters?: number'
      return:
        description: ''
        type: number
  - name: skip
    uid: '@azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.skip'
    package: '@azure/maps-search'
    summary: >-
      Starting offset of the returned results within the full result set.
      Default: 0, minimum: 0 and maximum: 1900
    fullName: skip
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'skip?: number'
      return:
        description: ''
        type: number
  - name: top
    uid: '@azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.top'
    package: '@azure/maps-search'
    summary: >-
      Maximum number of responses that will be returned. Default: 10, minimum: 1
      and maximum: 100
    fullName: top
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'top?: number'
      return:
        description: ''
        type: number
  - name: topLeft
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.topLeft
    package: '@azure/maps-search'
    summary: 'Top left position of the bounding box. E.g. 37.553,-122.453'
    fullName: topLeft
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'topLeft?: string'
      return:
        description: ''
        type: string
inheritedProperties:
  - name: abortSignal
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.abortSignal
    package: '@azure/maps-search'
    summary: The signal which can be used to abort requests.
    fullName: abortSignal
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        description: ''
        type: AbortSignalLike
    inheritanceDescription: <b>Inherited From</b> OperationOptions.abortSignal
  - name: onResponse
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.onResponse
    package: '@azure/maps-search'
    summary: |-
      A function to be called each time a response is received from the server
      while performing the requested operation.
      May be called multiple times.
    fullName: onResponse
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onResponse?: RawResponseCallback'
      return:
        description: ''
        type: RawResponseCallback
    inheritanceDescription: <b>Inherited From</b> OperationOptions.onResponse
  - name: requestOptions
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.requestOptions
    package: '@azure/maps-search'
    summary: Options used when creating and sending HTTP requests for this operation.
    fullName: requestOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'requestOptions?: OperationRequestOptions'
      return:
        description: ''
        type: OperationRequestOptions
    inheritanceDescription: <b>Inherited From</b> OperationOptions.requestOptions
  - name: serializerOptions
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.serializerOptions
    package: '@azure/maps-search'
    summary: Options to override serialization/de-serialization behavior.
    fullName: serializerOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'serializerOptions?: SerializerOptions'
      return:
        description: ''
        type: SerializerOptions
    inheritanceDescription: <b>Inherited From</b> OperationOptions.serializerOptions
  - name: tracingOptions
    uid: >-
      @azure/maps-search.SearchSearchPointOfInterestCategoryOptionalParams.tracingOptions
    package: '@azure/maps-search'
    summary: Options used when tracing is enabled.
    fullName: tracingOptions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'tracingOptions?: OperationTracingOptions'
      return:
        description: ''
        type: OperationTracingOptions
    inheritanceDescription: <b>Inherited From</b> OperationOptions.tracingOptions
extends: OperationOptions

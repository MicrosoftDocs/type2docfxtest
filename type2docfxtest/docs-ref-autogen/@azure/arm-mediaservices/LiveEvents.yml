### YamlMime:TSType
name: LiveEvents
uid: '@azure/arm-mediaservices.LiveEvents'
package: '@azure/arm-mediaservices'
summary: Interface representing a LiveEvents.
fullName: LiveEvents
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: 'beginAllocate(string, string, string, LiveEventsAllocateOptionalParams)'
    uid: '@azure/arm-mediaservices.LiveEvents.beginAllocate'
    package: '@azure/arm-mediaservices'
    summary: >-
      A live event is in StandBy state after allocation completes, and is ready
      to start.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginAllocate(resourceGroupName: string, accountName: string,
        liveEventName: string, options?: LiveEventsAllocateOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mediaservices.LiveEventsAllocateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginAllocateAndWait(string, string, string,
      LiveEventsAllocateOptionalParams)
    uid: '@azure/arm-mediaservices.LiveEvents.beginAllocateAndWait'
    package: '@azure/arm-mediaservices'
    summary: >-
      A live event is in StandBy state after allocation completes, and is ready
      to start.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginAllocateAndWait(resourceGroupName: string, accountName:
        string, liveEventName: string, options?:
        LiveEventsAllocateOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: options
          type: >-
            <xref
            uid="@azure/arm-mediaservices.LiveEventsAllocateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginCreate(string, string, string, LiveEvent,
      LiveEventsCreateOptionalParams)
    uid: '@azure/arm-mediaservices.LiveEvents.beginCreate'
    package: '@azure/arm-mediaservices'
    summary: Creates a new live event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreate(resourceGroupName: string, accountName: string,
        liveEventName: string, parameters: LiveEvent, options?:
        LiveEventsCreateOptionalParams):
        Promise<PollerLike<PollOperationState<LiveEventsCreateResponse>,
        LiveEventsCreateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: parameters
          type: <xref uid="@azure/arm-mediaservices.LiveEvent" />
          description: Live event properties needed for creation.
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.LiveEventsCreateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-mediaservices.LiveEventsCreateResponse" />&gt;, <xref
          uid="@azure/arm-mediaservices.LiveEventsCreateResponse" />&gt;&gt;
  - name: >-
      beginCreateAndWait(string, string, string, LiveEvent,
      LiveEventsCreateOptionalParams)
    uid: '@azure/arm-mediaservices.LiveEvents.beginCreateAndWait'
    package: '@azure/arm-mediaservices'
    summary: Creates a new live event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateAndWait(resourceGroupName: string, accountName:
        string, liveEventName: string, parameters: LiveEvent, options?:
        LiveEventsCreateOptionalParams): Promise<LiveEventsCreateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: parameters
          type: <xref uid="@azure/arm-mediaservices.LiveEvent" />
          description: Live event properties needed for creation.
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.LiveEventsCreateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-mediaservices.LiveEventsCreateResponse" />&gt;
  - name: 'beginDelete(string, string, string, LiveEventsDeleteOptionalParams)'
    uid: '@azure/arm-mediaservices.LiveEvents.beginDelete'
    package: '@azure/arm-mediaservices'
    summary: Deletes a live event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, accountName: string,
        liveEventName: string, options?: LiveEventsDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.LiveEventsDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginDeleteAndWait(string, string, string, LiveEventsDeleteOptionalParams)'
    uid: '@azure/arm-mediaservices.LiveEvents.beginDeleteAndWait'
    package: '@azure/arm-mediaservices'
    summary: Deletes a live event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, accountName:
        string, liveEventName: string, options?:
        LiveEventsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.LiveEventsDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'beginReset(string, string, string, LiveEventsResetOptionalParams)'
    uid: '@azure/arm-mediaservices.LiveEvents.beginReset'
    package: '@azure/arm-mediaservices'
    summary: >-
      Resets an existing live event. All live outputs for the live event are
      deleted and the live event is

      stopped and will be started again. All assets used by the live outputs and
      streaming locators

      created on these assets are unaffected.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginReset(resourceGroupName: string, accountName: string,
        liveEventName: string, options?: LiveEventsResetOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.LiveEventsResetOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginResetAndWait(string, string, string, LiveEventsResetOptionalParams)'
    uid: '@azure/arm-mediaservices.LiveEvents.beginResetAndWait'
    package: '@azure/arm-mediaservices'
    summary: >-
      Resets an existing live event. All live outputs for the live event are
      deleted and the live event is

      stopped and will be started again. All assets used by the live outputs and
      streaming locators

      created on these assets are unaffected.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginResetAndWait(resourceGroupName: string, accountName:
        string, liveEventName: string, options?: LiveEventsResetOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.LiveEventsResetOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'beginStart(string, string, string, LiveEventsStartOptionalParams)'
    uid: '@azure/arm-mediaservices.LiveEvents.beginStart'
    package: '@azure/arm-mediaservices'
    summary: >-
      A live event in Stopped or StandBy state will be in Running state after
      the start operation

      completes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStart(resourceGroupName: string, accountName: string,
        liveEventName: string, options?: LiveEventsStartOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.LiveEventsStartOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginStartAndWait(string, string, string, LiveEventsStartOptionalParams)'
    uid: '@azure/arm-mediaservices.LiveEvents.beginStartAndWait'
    package: '@azure/arm-mediaservices'
    summary: >-
      A live event in Stopped or StandBy state will be in Running state after
      the start operation

      completes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStartAndWait(resourceGroupName: string, accountName:
        string, liveEventName: string, options?: LiveEventsStartOptionalParams):
        Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.LiveEventsStartOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginStop(string, string, string, LiveEventActionInput,
      LiveEventsStopOptionalParams)
    uid: '@azure/arm-mediaservices.LiveEvents.beginStop'
    package: '@azure/arm-mediaservices'
    summary: Stops a running live event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStop(resourceGroupName: string, accountName: string,
        liveEventName: string, parameters: LiveEventActionInput, options?:
        LiveEventsStopOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: parameters
          type: <xref uid="@azure/arm-mediaservices.LiveEventActionInput" />
          description: LiveEvent stop parameters
        - id: options
          type: <xref uid="@azure/arm-mediaservices.LiveEventsStopOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginStopAndWait(string, string, string, LiveEventActionInput,
      LiveEventsStopOptionalParams)
    uid: '@azure/arm-mediaservices.LiveEvents.beginStopAndWait'
    package: '@azure/arm-mediaservices'
    summary: Stops a running live event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginStopAndWait(resourceGroupName: string, accountName:
        string, liveEventName: string, parameters: LiveEventActionInput,
        options?: LiveEventsStopOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: parameters
          type: <xref uid="@azure/arm-mediaservices.LiveEventActionInput" />
          description: LiveEvent stop parameters
        - id: options
          type: <xref uid="@azure/arm-mediaservices.LiveEventsStopOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, string, LiveEvent,
      LiveEventsUpdateOptionalParams)
    uid: '@azure/arm-mediaservices.LiveEvents.beginUpdate'
    package: '@azure/arm-mediaservices'
    summary: Updates settings on an existing live event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, accountName: string,
        liveEventName: string, parameters: LiveEvent, options?:
        LiveEventsUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<LiveEventsUpdateResponse>,
        LiveEventsUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: parameters
          type: <xref uid="@azure/arm-mediaservices.LiveEvent" />
          description: Live event properties needed for patch.
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.LiveEventsUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-mediaservices.LiveEventsUpdateResponse" />&gt;, <xref
          uid="@azure/arm-mediaservices.LiveEventsUpdateResponse" />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, LiveEvent,
      LiveEventsUpdateOptionalParams)
    uid: '@azure/arm-mediaservices.LiveEvents.beginUpdateAndWait'
    package: '@azure/arm-mediaservices'
    summary: Updates settings on an existing live event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, accountName:
        string, liveEventName: string, parameters: LiveEvent, options?:
        LiveEventsUpdateOptionalParams): Promise<LiveEventsUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: parameters
          type: <xref uid="@azure/arm-mediaservices.LiveEvent" />
          description: Live event properties needed for patch.
        - id: options
          type: >-
            <xref uid="@azure/arm-mediaservices.LiveEventsUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-mediaservices.LiveEventsUpdateResponse" />&gt;
  - name: 'get(string, string, string, LiveEventsGetOptionalParams)'
    uid: '@azure/arm-mediaservices.LiveEvents.get'
    package: '@azure/arm-mediaservices'
    summary: Gets properties of a live event.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, accountName: string,
        liveEventName: string, options?: LiveEventsGetOptionalParams):
        Promise<LiveEventsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: liveEventName
          type: string
          description: 'The name of the live event, maximum length is 32.'
        - id: options
          type: <xref uid="@azure/arm-mediaservices.LiveEventsGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-mediaservices.LiveEventsGetResponse"
          />&gt;
  - name: 'list(string, string, LiveEventsListOptionalParams)'
    uid: '@azure/arm-mediaservices.LiveEvents.list'
    package: '@azure/arm-mediaservices'
    summary: Lists all the live events in the account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, accountName: string, options?:
        LiveEventsListOptionalParams): PagedAsyncIterableIterator<LiveEvent>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group within the Azure subscription.
        - id: accountName
          type: string
          description: The Media Services account name.
        - id: options
          type: <xref uid="@azure/arm-mediaservices.LiveEventsListOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-mediaservices.LiveEvent" />&gt;

### YamlMime:TSType
name: ApiIssue
uid: '@azure/arm-apimanagement - v8.1.2.ApiIssue'
package: '@azure/arm-apimanagement - v8.1.2'
summary: Interface representing a ApiIssue.
fullName: ApiIssue
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      createOrUpdate(string, string, string, string, IssueContract,
      ApiIssueCreateOrUpdateOptionalParams)
    uid: '@azure/arm-apimanagement - v8.1.2.ApiIssue.createOrUpdate'
    package: '@azure/arm-apimanagement - v8.1.2'
    summary: Creates a new Issue for an API or updates an existing one.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, parameters: IssueContract, options?:
        ApiIssueCreateOrUpdateOptionalParams):
        Promise<ApiIssueCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: parameters
          type: '@azure/arm-apimanagement - <xref uid="v8.1.2.IssueContract" />'
          description: Create parameters.
        - id: options
          type: >-
            @azure/arm-apimanagement - <xref
            uid="v8.1.2.ApiIssueCreateOrUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;@azure/arm-apimanagement - <xref
          uid="v8.1.2.ApiIssueCreateOrUpdateResponse" />&gt;
  - name: >-
      delete(string, string, string, string, string,
      ApiIssueDeleteOptionalParams)
    uid: '@azure/arm-apimanagement - v8.1.2.ApiIssue.delete'
    package: '@azure/arm-apimanagement - v8.1.2'
    summary: Deletes the specified Issue from an API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, ifMatch: string, options?:
        ApiIssueDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: options
          type: >-
            @azure/arm-apimanagement - <xref
            uid="v8.1.2.ApiIssueDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, string, string, ApiIssueGetOptionalParams)'
    uid: '@azure/arm-apimanagement - v8.1.2.ApiIssue.get'
    package: '@azure/arm-apimanagement - v8.1.2'
    summary: Gets the details of the Issue for an API specified by its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, options?: ApiIssueGetOptionalParams):
        Promise<ApiIssueGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            @azure/arm-apimanagement - <xref
            uid="v8.1.2.ApiIssueGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;@azure/arm-apimanagement - <xref
          uid="v8.1.2.ApiIssueGetResponse" />&gt;
  - name: >-
      getEntityTag(string, string, string, string,
      ApiIssueGetEntityTagOptionalParams)
    uid: '@azure/arm-apimanagement - v8.1.2.ApiIssue.getEntityTag'
    package: '@azure/arm-apimanagement - v8.1.2'
    summary: >-
      Gets the entity state (Etag) version of the Issue for an API specified by
      its identifier.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getEntityTag(resourceGroupName: string, serviceName: string,
        apiId: string, issueId: string, options?:
        ApiIssueGetEntityTagOptionalParams):
        Promise<ApiIssueGetEntityTagResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: options
          type: >-
            @azure/arm-apimanagement - <xref
            uid="v8.1.2.ApiIssueGetEntityTagOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;@azure/arm-apimanagement - <xref
          uid="v8.1.2.ApiIssueGetEntityTagResponse" />&gt;
  - name: 'listByService(string, string, string, ApiIssueListByServiceOptionalParams)'
    uid: '@azure/arm-apimanagement - v8.1.2.ApiIssue.listByService'
    package: '@azure/arm-apimanagement - v8.1.2'
    summary: Lists all issues associated with the specified API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listByService(resourceGroupName: string, serviceName: string,
        apiId: string, options?: ApiIssueListByServiceOptionalParams):
        PagedAsyncIterableIterator<IssueContract>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: options
          type: >-
            @azure/arm-apimanagement - <xref
            uid="v8.1.2.ApiIssueListByServiceOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;@azure/arm-apimanagement - <xref
          uid="v8.1.2.IssueContract" />&gt;
  - name: >-
      update(string, string, string, string, string, IssueUpdateContract,
      ApiIssueUpdateOptionalParams)
    uid: '@azure/arm-apimanagement - v8.1.2.ApiIssue.update'
    package: '@azure/arm-apimanagement - v8.1.2'
    summary: Updates an existing issue for an API.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, serviceName: string, apiId:
        string, issueId: string, ifMatch: string, parameters:
        IssueUpdateContract, options?: ApiIssueUpdateOptionalParams):
        Promise<ApiIssueUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: serviceName
          type: string
          description: The name of the API Management service.
        - id: apiId
          type: string
          description: >-
            API identifier. Must be unique in the current API Management service
            instance.
        - id: issueId
          type: string
          description: >-
            Issue identifier. Must be unique in the current API Management
            service instance.
        - id: ifMatch
          type: string
          description: >-
            ETag of the Entity. ETag should match the current entity state from
            the header
                           response of the GET request or it should be * for unconditional update.
        - id: parameters
          type: '@azure/arm-apimanagement - <xref uid="v8.1.2.IssueUpdateContract" />'
          description: Update parameters.
        - id: options
          type: >-
            @azure/arm-apimanagement - <xref
            uid="v8.1.2.ApiIssueUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;@azure/arm-apimanagement - <xref
          uid="v8.1.2.ApiIssueUpdateResponse" />&gt;

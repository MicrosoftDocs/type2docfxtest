### YamlMime:TSType
name: Vaults
uid: '@azure/arm-keyvault.Vaults'
package: '@azure/arm-keyvault'
summary: Interface representing a Vaults.
fullName: Vaults
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateOrUpdate(string, string, VaultCreateOrUpdateParameters,
      VaultsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-keyvault.Vaults.beginCreateOrUpdate'
    package: '@azure/arm-keyvault'
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, vaultName:
        string, parameters: VaultCreateOrUpdateParameters, options?:
        VaultsCreateOrUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<VaultsCreateOrUpdateResponse>,
        VaultsCreateOrUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type: string
          description: Name of the vault
        - id: parameters
          type: <xref uid="@azure/arm-keyvault.VaultCreateOrUpdateParameters" />
          description: Parameters to create or update the vault
        - id: options
          type: >-
            <xref uid="@azure/arm-keyvault.VaultsCreateOrUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-keyvault.VaultsCreateOrUpdateResponse" />&gt;, <xref
          uid="@azure/arm-keyvault.VaultsCreateOrUpdateResponse" />&gt;&gt;
  - name: >-
      beginCreateOrUpdateAndWait(string, string, VaultCreateOrUpdateParameters,
      VaultsCreateOrUpdateOptionalParams)
    uid: '@azure/arm-keyvault.Vaults.beginCreateOrUpdateAndWait'
    package: '@azure/arm-keyvault'
    summary: Create or update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdateAndWait(resourceGroupName: string,
        vaultName: string, parameters: VaultCreateOrUpdateParameters, options?:
        VaultsCreateOrUpdateOptionalParams):
        Promise<VaultsCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type: string
          description: Name of the vault
        - id: parameters
          type: <xref uid="@azure/arm-keyvault.VaultCreateOrUpdateParameters" />
          description: Parameters to create or update the vault
        - id: options
          type: >-
            <xref uid="@azure/arm-keyvault.VaultsCreateOrUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-keyvault.VaultsCreateOrUpdateResponse" />&gt;
  - name: 'beginPurgeDeleted(string, string, VaultsPurgeDeletedOptionalParams)'
    uid: '@azure/arm-keyvault.Vaults.beginPurgeDeleted'
    package: '@azure/arm-keyvault'
    summary: >-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeleted(vaultName: string, location: string,
        options?: VaultsPurgeDeletedOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: vaultName
          type: string
          description: The name of the soft-deleted vault.
        - id: location
          type: string
          description: The location of the soft-deleted vault.
        - id: options
          type: <xref uid="@azure/arm-keyvault.VaultsPurgeDeletedOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: 'beginPurgeDeletedAndWait(string, string, VaultsPurgeDeletedOptionalParams)'
    uid: '@azure/arm-keyvault.Vaults.beginPurgeDeletedAndWait'
    package: '@azure/arm-keyvault'
    summary: >-
      Permanently deletes the specified vault. aka Purges the deleted Azure key
      vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginPurgeDeletedAndWait(vaultName: string, location: string,
        options?: VaultsPurgeDeletedOptionalParams): Promise<void>
      parameters:
        - id: vaultName
          type: string
          description: The name of the soft-deleted vault.
        - id: location
          type: string
          description: The location of the soft-deleted vault.
        - id: options
          type: <xref uid="@azure/arm-keyvault.VaultsPurgeDeletedOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      checkNameAvailability(VaultCheckNameAvailabilityParameters,
      VaultsCheckNameAvailabilityOptionalParams)
    uid: '@azure/arm-keyvault.Vaults.checkNameAvailability'
    package: '@azure/arm-keyvault'
    summary: Checks that the vault name is valid and is not already in use.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function checkNameAvailability(vaultName:
        VaultCheckNameAvailabilityParameters, options?:
        VaultsCheckNameAvailabilityOptionalParams):
        Promise<VaultsCheckNameAvailabilityResponse>
      parameters:
        - id: vaultName
          type: >-
            <xref uid="@azure/arm-keyvault.VaultCheckNameAvailabilityParameters"
            />
          description: The name of the vault.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault.VaultsCheckNameAvailabilityOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-keyvault.VaultsCheckNameAvailabilityResponse" />&gt;
  - name: 'delete(string, string, VaultsDeleteOptionalParams)'
    uid: '@azure/arm-keyvault.Vaults.delete'
    package: '@azure/arm-keyvault'
    summary: Deletes the specified Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function delete(resourceGroupName: string, vaultName: string, options?:
        VaultsDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type: string
          description: The name of the vault to delete
        - id: options
          type: <xref uid="@azure/arm-keyvault.VaultsDeleteOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: 'get(string, string, VaultsGetOptionalParams)'
    uid: '@azure/arm-keyvault.Vaults.get'
    package: '@azure/arm-keyvault'
    summary: Gets the specified Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, vaultName: string, options?:
        VaultsGetOptionalParams): Promise<VaultsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type: string
          description: The name of the vault.
        - id: options
          type: <xref uid="@azure/arm-keyvault.VaultsGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-keyvault.VaultsGetResponse" />&gt;
  - name: 'getDeleted(string, string, VaultsGetDeletedOptionalParams)'
    uid: '@azure/arm-keyvault.Vaults.getDeleted'
    package: '@azure/arm-keyvault'
    summary: Gets the deleted Azure key vault.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getDeleted(vaultName: string, location: string, options?:
        VaultsGetDeletedOptionalParams): Promise<VaultsGetDeletedResponse>
      parameters:
        - id: vaultName
          type: string
          description: The name of the vault.
        - id: location
          type: string
          description: The location of the deleted vault.
        - id: options
          type: <xref uid="@azure/arm-keyvault.VaultsGetDeletedOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref uid="@azure/arm-keyvault.VaultsGetDeletedResponse"
          />&gt;
  - name: list(VaultsListOptionalParams)
    uid: '@azure/arm-keyvault.Vaults.list'
    package: '@azure/arm-keyvault'
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: VaultsListOptionalParams):
        PagedAsyncIterableIterator<Resource>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-keyvault.VaultsListOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-keyvault.Resource"
          />&gt;
  - name: 'listByResourceGroup(string, VaultsListByResourceGroupOptionalParams)'
    uid: '@azure/arm-keyvault.Vaults.listByResourceGroup'
    package: '@azure/arm-keyvault'
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription and within the

      specified resource group.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        VaultsListByResourceGroupOptionalParams):
        PagedAsyncIterableIterator<Vault>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the vault belongs.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault.VaultsListByResourceGroupOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-keyvault.Vault"
          />&gt;
  - name: listBySubscription(VaultsListBySubscriptionOptionalParams)
    uid: '@azure/arm-keyvault.Vaults.listBySubscription'
    package: '@azure/arm-keyvault'
    summary: >-
      The List operation gets information about the vaults associated with the
      subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?:
        VaultsListBySubscriptionOptionalParams):
        PagedAsyncIterableIterator<Vault>
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault.VaultsListBySubscriptionOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref uid="@azure/arm-keyvault.Vault"
          />&gt;
  - name: listDeleted(VaultsListDeletedOptionalParams)
    uid: '@azure/arm-keyvault.Vaults.listDeleted'
    package: '@azure/arm-keyvault'
    summary: Gets information about the deleted vaults in a subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listDeleted(options?: VaultsListDeletedOptionalParams):
        PagedAsyncIterableIterator<DeletedVault>
      parameters:
        - id: options
          type: <xref uid="@azure/arm-keyvault.VaultsListDeletedOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-keyvault.DeletedVault" />&gt;
  - name: 'update(string, string, VaultPatchParameters, VaultsUpdateOptionalParams)'
    uid: '@azure/arm-keyvault.Vaults.update'
    package: '@azure/arm-keyvault'
    summary: Update a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, vaultName: string,
        parameters: VaultPatchParameters, options?: VaultsUpdateOptionalParams):
        Promise<VaultsUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the server belongs.
        - id: vaultName
          type: string
          description: Name of the vault
        - id: parameters
          type: <xref uid="@azure/arm-keyvault.VaultPatchParameters" />
          description: Parameters to patch the vault
        - id: options
          type: <xref uid="@azure/arm-keyvault.VaultsUpdateOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;<xref uid="@azure/arm-keyvault.VaultsUpdateResponse" />&gt;
  - name: >-
      updateAccessPolicy(string, string, AccessPolicyUpdateKind,
      VaultAccessPolicyParameters, VaultsUpdateAccessPolicyOptionalParams)
    uid: '@azure/arm-keyvault.Vaults.updateAccessPolicy'
    package: '@azure/arm-keyvault'
    summary: Update access policies in a key vault in the specified subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateAccessPolicy(resourceGroupName: string, vaultName:
        string, operationKind: AccessPolicyUpdateKind, parameters:
        VaultAccessPolicyParameters, options?:
        VaultsUpdateAccessPolicyOptionalParams):
        Promise<VaultsUpdateAccessPolicyResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the Resource Group to which the vault belongs.
        - id: vaultName
          type: string
          description: Name of the vault
        - id: operationKind
          type: <xref uid="@azure/arm-keyvault.AccessPolicyUpdateKind" />
          description: Name of the operation
        - id: parameters
          type: <xref uid="@azure/arm-keyvault.VaultAccessPolicyParameters" />
          description: Access policy to merge into the vault
        - id: options
          type: >-
            <xref
            uid="@azure/arm-keyvault.VaultsUpdateAccessPolicyOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-keyvault.VaultsUpdateAccessPolicyResponse" />&gt;

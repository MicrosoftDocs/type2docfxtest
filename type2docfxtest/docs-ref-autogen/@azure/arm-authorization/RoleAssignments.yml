### YamlMime:TSType
name: RoleAssignments
uid: '@azure/arm-authorization.RoleAssignments'
package: '@azure/arm-authorization'
summary: Class representing a RoleAssignments.
fullName: RoleAssignments
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: RoleAssignments(AuthorizationManagementClientContext)
    uid: '@azure/arm-authorization.RoleAssignments.constructor'
    package: '@azure/arm-authorization'
    summary: Create a RoleAssignments.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new RoleAssignments(client: AuthorizationManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-authorization.AuthorizationManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: >-
      create(string, string, RoleAssignmentCreateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-authorization.RoleAssignments.create'
    package: '@azure/arm-authorization'
    summary: Creates a role assignment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(scope: string, roleAssignmentName: string, parameters:
        RoleAssignmentCreateParameters, options?: msRest.RequestOptionsBase):
        Promise<Models.RoleAssignmentsCreateResponse>
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the role assignment to create. The scope can be any
            REST resource

            instance. For example, use '/subscriptions/{subscription-id}/' for a
            subscription,

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
            for a resource group,

            and

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'

            for a resource.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to create. It can be any valid GUID.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-authorization.RoleAssignmentCreateParameters"
            />
          description: Parameters for the role assignment.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsCreateResponse>
        type: Promise&lt;<xref uid="Models.RoleAssignmentsCreateResponse" />&gt;
  - name: >-
      create(string, string, RoleAssignmentCreateParameters, RequestOptionsBase,
      ServiceCallback<RoleAssignment>)
    uid: '@azure/arm-authorization.RoleAssignments.create_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(scope: string, roleAssignmentName: string, parameters:
        RoleAssignmentCreateParameters, options: RequestOptionsBase, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the role assignment to create. The scope can be any
            REST resource

            instance. For example, use '/subscriptions/{subscription-id}/' for a
            subscription,

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
            for a resource group,

            and

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'

            for a resource.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to create. It can be any valid GUID.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-authorization.RoleAssignmentCreateParameters"
            />
          description: Parameters for the role assignment.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: >-
      create(string, string, RoleAssignmentCreateParameters,
      ServiceCallback<RoleAssignment>)
    uid: '@azure/arm-authorization.RoleAssignments.create_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function create(scope: string, roleAssignmentName: string, parameters:
        RoleAssignmentCreateParameters, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type: string
          description: >-
            The scope of the role assignment to create. The scope can be any
            REST resource

            instance. For example, use '/subscriptions/{subscription-id}/' for a
            subscription,

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}'
            for a resource group,

            and

            '/subscriptions/{subscription-id}/resourceGroups/{resource-group-name}/providers/{resource-provider}/{resource-type}/{resource-name}'

            for a resource.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to create. It can be any valid GUID.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-authorization.RoleAssignmentCreateParameters"
            />
          description: Parameters for the role assignment.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: >-
      createById(string, RoleAssignmentCreateParameters,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-authorization.RoleAssignments.createById'
    package: '@azure/arm-authorization'
    summary: Creates a role assignment by ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createById(roleId: string, parameters:
        RoleAssignmentCreateParameters, options?: msRest.RequestOptionsBase):
        Promise<Models.RoleAssignmentsCreateByIdResponse>
      parameters:
        - id: roleId
          type: string
          description: The ID of the role assignment to create.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-authorization.RoleAssignmentCreateParameters"
            />
          description: Parameters for the role assignment.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsCreateByIdResponse>
        type: Promise&lt;<xref uid="Models.RoleAssignmentsCreateByIdResponse" />&gt;
  - name: >-
      createById(string, RoleAssignmentCreateParameters, RequestOptionsBase,
      ServiceCallback<RoleAssignment>)
    uid: '@azure/arm-authorization.RoleAssignments.createById_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createById(roleId: string, parameters:
        RoleAssignmentCreateParameters, options: RequestOptionsBase, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type: string
          description: The ID of the role assignment to create.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-authorization.RoleAssignmentCreateParameters"
            />
          description: Parameters for the role assignment.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: >-
      createById(string, RoleAssignmentCreateParameters,
      ServiceCallback<RoleAssignment>)
    uid: '@azure/arm-authorization.RoleAssignments.createById_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function createById(roleId: string, parameters:
        RoleAssignmentCreateParameters, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type: string
          description: The ID of the role assignment to create.
        - id: parameters
          type: >-
            <xref uid="@azure/arm-authorization.RoleAssignmentCreateParameters"
            />
          description: Parameters for the role assignment.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: 'deleteById(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleAssignments.deleteById'
    package: '@azure/arm-authorization'
    summary: Deletes a role assignment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteById(roleId: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.RoleAssignmentsDeleteByIdResponse>
      parameters:
        - id: roleId
          type: string
          description: The ID of the role assignment to delete.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsDeleteByIdResponse>
        type: Promise&lt;<xref uid="Models.RoleAssignmentsDeleteByIdResponse" />&gt;
  - name: 'deleteById(string, RequestOptionsBase, ServiceCallback<RoleAssignment>)'
    uid: '@azure/arm-authorization.RoleAssignments.deleteById_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteById(roleId: string, options: RequestOptionsBase,
        callback: ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type: string
          description: The ID of the role assignment to delete.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: 'deleteById(string, ServiceCallback<RoleAssignment>)'
    uid: '@azure/arm-authorization.RoleAssignments.deleteById_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteById(roleId: string, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type: string
          description: The ID of the role assignment to delete.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleAssignments.deleteMethod'
    package: '@azure/arm-authorization'
    summary: Deletes a role assignment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(scope: string, roleAssignmentName: string,
        options?: msRest.RequestOptionsBase):
        Promise<Models.RoleAssignmentsDeleteMethodResponse>
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignment to delete.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to delete.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsDeleteMethodResponse>
        type: >-
          Promise&lt;<xref uid="Models.RoleAssignmentsDeleteMethodResponse"
          />&gt;
  - name: >-
      deleteMethod(string, string, RequestOptionsBase,
      ServiceCallback<RoleAssignment>)
    uid: '@azure/arm-authorization.RoleAssignments.deleteMethod_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(scope: string, roleAssignmentName: string,
        options: RequestOptionsBase, callback: ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignment to delete.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to delete.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, string, ServiceCallback<RoleAssignment>)'
    uid: '@azure/arm-authorization.RoleAssignments.deleteMethod_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(scope: string, roleAssignmentName: string,
        callback: ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignment to delete.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to delete.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleAssignments.get'
    package: '@azure/arm-authorization'
    summary: Get the specified role assignment.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, roleAssignmentName: string, options?:
        msRest.RequestOptionsBase): Promise<Models.RoleAssignmentsGetResponse>
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignment.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to get.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsGetResponse>
        type: Promise&lt;<xref uid="Models.RoleAssignmentsGetResponse" />&gt;
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<RoleAssignment>)'
    uid: '@azure/arm-authorization.RoleAssignments.get_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, roleAssignmentName: string, options:
        RequestOptionsBase, callback: ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignment.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to get.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<RoleAssignment>)'
    uid: '@azure/arm-authorization.RoleAssignments.get_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(scope: string, roleAssignmentName: string, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignment.
        - id: roleAssignmentName
          type: string
          description: The name of the role assignment to get.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: 'getById(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleAssignments.getById'
    package: '@azure/arm-authorization'
    summary: Gets a role assignment by ID.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getById(roleId: string, options?: msRest.RequestOptionsBase):
        Promise<Models.RoleAssignmentsGetByIdResponse>
      parameters:
        - id: roleId
          type: string
          description: The ID of the role assignment to get.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsGetByIdResponse>
        type: Promise&lt;<xref uid="Models.RoleAssignmentsGetByIdResponse" />&gt;
  - name: 'getById(string, RequestOptionsBase, ServiceCallback<RoleAssignment>)'
    uid: '@azure/arm-authorization.RoleAssignments.getById_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getById(roleId: string, options: RequestOptionsBase, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type: string
          description: The ID of the role assignment to get.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: 'getById(string, ServiceCallback<RoleAssignment>)'
    uid: '@azure/arm-authorization.RoleAssignments.getById_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function getById(roleId: string, callback:
        ServiceCallback<RoleAssignment>)
      parameters:
        - id: roleId
          type: string
          description: The ID of the role assignment to get.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignment" />&gt;
          description: |
            The callback
  - name: list(Models.RoleAssignmentsListOptionalParams)
    uid: '@azure/arm-authorization.RoleAssignments.list'
    package: '@azure/arm-authorization'
    summary: Gets all role assignments for the subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: Models.RoleAssignmentsListOptionalParams):
        Promise<Models.RoleAssignmentsListResponse>
      parameters:
        - id: options
          type: <xref uid="Models.RoleAssignmentsListOptionalParams" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsListResponse>
        type: Promise&lt;<xref uid="Models.RoleAssignmentsListResponse" />&gt;
  - name: >-
      list(RoleAssignmentsListOptionalParams,
      ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.list_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(options: RoleAssignmentsListOptionalParams, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization.RoleAssignmentsListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.list_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<RoleAssignmentListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForResource(string, string, string, string, string,
      Models.RoleAssignmentsListForResourceOptionalParams)
    uid: '@azure/arm-authorization.RoleAssignments.listForResource'
    package: '@azure/arm-authorization'
    summary: Gets role assignments for a resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options?:
        Models.RoleAssignmentsListForResourceOptionalParams):
        Promise<Models.RoleAssignmentsListForResourceResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource to get role assignments for.
        - id: options
          type: <xref uid="Models.RoleAssignmentsListForResourceOptionalParams" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsListForResourceResponse>
        type: >-
          Promise&lt;<xref uid="Models.RoleAssignmentsListForResourceResponse"
          />&gt;
  - name: >-
      listForResource(string, string, string, string, string,
      RoleAssignmentsListForResourceOptionalParams,
      ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.listForResource_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, options:
        RoleAssignmentsListForResourceOptionalParams, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource to get role assignments for.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization.RoleAssignmentsListForResourceOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForResource(string, string, string, string, string,
      ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.listForResource_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResource(resourceGroupName: string,
        resourceProviderNamespace: string, parentResourcePath: string,
        resourceType: string, resourceName: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: resourceProviderNamespace
          type: string
          description: The namespace of the resource provider.
        - id: parentResourcePath
          type: string
          description: The parent resource identity.
        - id: resourceType
          type: string
          description: The resource type of the resource.
        - id: resourceName
          type: string
          description: The name of the resource to get role assignments for.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForResourceGroup(string,
      Models.RoleAssignmentsListForResourceGroupOptionalParams)
    uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroup'
    package: '@azure/arm-authorization'
    summary: Gets role assignments for a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, options?:
        Models.RoleAssignmentsListForResourceGroupOptionalParams):
        Promise<Models.RoleAssignmentsListForResourceGroupResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: >-
            <xref uid="Models.RoleAssignmentsListForResourceGroupOptionalParams"
            />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsListForResourceGroupResponse>
        type: >-
          Promise&lt;<xref
          uid="Models.RoleAssignmentsListForResourceGroupResponse" />&gt;
  - name: >-
      listForResourceGroup(string,
      RoleAssignmentsListForResourceGroupOptionalParams,
      ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroup_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, options:
        RoleAssignmentsListForResourceGroupOptionalParams, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization.RoleAssignmentsListForResourceGroupOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: 'listForResourceGroup(string, ServiceCallback<RoleAssignmentListResult>)'
    uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroup_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: 'listForResourceGroupNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroupNext'
    package: '@azure/arm-authorization'
    summary: Gets role assignments for a resource group.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.RoleAssignmentsListForResourceGroupNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsListForResourceGroupNextResponse>
        type: >-
          Promise&lt;<xref
          uid="Models.RoleAssignmentsListForResourceGroupNextResponse" />&gt;
  - name: >-
      listForResourceGroupNext(string, RequestOptionsBase,
      ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroupNext_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: >-
      listForResourceGroupNext(string,
      ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.listForResourceGroupNext_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceGroupNext(nextPageLink: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: 'listForResourceNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleAssignments.listForResourceNext'
    package: '@azure/arm-authorization'
    summary: Gets role assignments for a resource.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.RoleAssignmentsListForResourceNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsListForResourceNextResponse>
        type: >-
          Promise&lt;<xref
          uid="Models.RoleAssignmentsListForResourceNextResponse" />&gt;
  - name: >-
      listForResourceNext(string, RequestOptionsBase,
      ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.listForResourceNext_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: 'listForResourceNext(string, ServiceCallback<RoleAssignmentListResult>)'
    uid: '@azure/arm-authorization.RoleAssignments.listForResourceNext_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForResourceNext(nextPageLink: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: 'listForScope(string, Models.RoleAssignmentsListForScopeOptionalParams)'
    uid: '@azure/arm-authorization.RoleAssignments.listForScope'
    package: '@azure/arm-authorization'
    summary: Gets role assignments for a scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForScope(scope: string, options?:
        Models.RoleAssignmentsListForScopeOptionalParams):
        Promise<Models.RoleAssignmentsListForScopeResponse>
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignments.
        - id: options
          type: <xref uid="Models.RoleAssignmentsListForScopeOptionalParams" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsListForScopeResponse>
        type: >-
          Promise&lt;<xref uid="Models.RoleAssignmentsListForScopeResponse"
          />&gt;
  - name: >-
      listForScope(string, RoleAssignmentsListForScopeOptionalParams,
      ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.listForScope_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForScope(scope: string, options:
        RoleAssignmentsListForScopeOptionalParams, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignments.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-authorization.RoleAssignmentsListForScopeOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: 'listForScope(string, ServiceCallback<RoleAssignmentListResult>)'
    uid: '@azure/arm-authorization.RoleAssignments.listForScope_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForScope(scope: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: scope
          type: string
          description: The scope of the role assignments.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: 'listForScopeNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleAssignments.listForScopeNext'
    package: '@azure/arm-authorization'
    summary: Gets role assignments for a scope.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForScopeNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.RoleAssignmentsListForScopeNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsListForScopeNextResponse>
        type: >-
          Promise&lt;<xref uid="Models.RoleAssignmentsListForScopeNextResponse"
          />&gt;
  - name: >-
      listForScopeNext(string, RequestOptionsBase,
      ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.listForScopeNext_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForScopeNext(nextPageLink: string, options:
        RequestOptionsBase, callback: ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: 'listForScopeNext(string, ServiceCallback<RoleAssignmentListResult>)'
    uid: '@azure/arm-authorization.RoleAssignments.listForScopeNext_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listForScopeNext(nextPageLink: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-authorization.RoleAssignments.listNext'
    package: '@azure/arm-authorization'
    summary: Gets all role assignments for the subscription.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.RoleAssignmentsListNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.RoleAssignmentsListNextResponse>
        type: Promise&lt;<xref uid="Models.RoleAssignmentsListNextResponse" />&gt;
  - name: >-
      listNext(string, RequestOptionsBase,
      ServiceCallback<RoleAssignmentListResult>)
    uid: '@azure/arm-authorization.RoleAssignments.listNext_2'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<RoleAssignmentListResult>)'
    uid: '@azure/arm-authorization.RoleAssignments.listNext_1'
    package: '@azure/arm-authorization'
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<RoleAssignmentListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-authorization.RoleAssignmentListResult" />&gt;
          description: |
            The callback

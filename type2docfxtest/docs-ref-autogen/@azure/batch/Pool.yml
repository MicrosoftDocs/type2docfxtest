### YamlMime:TSType
name: Pool
uid: '@azure/batch.Pool'
package: '@azure/batch'
summary: Class representing a Pool.
fullName: Pool
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Pool(BatchServiceClientContext)
    uid: '@azure/batch.Pool.constructor'
    package: '@azure/batch'
    summary: Create a Pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Pool(client: BatchServiceClientContext)'
      parameters:
        - id: client
          type: <xref uid="@azure/batch.BatchServiceClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'add(PoolAddParameter, Models.PoolAddOptionalParams)'
    uid: '@azure/batch.Pool.add'
    package: '@azure/batch'
    summary: >-
      When naming Pools, avoid including sensitive information such as user
      names or secret project

      names. This information may appear in telemetry logs accessible to
      Microsoft Support engineers.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function add(pool: PoolAddParameter, options?:
        Models.PoolAddOptionalParams): Promise<Models.PoolAddResponse>
      parameters:
        - id: pool
          type: <xref uid="@azure/batch.PoolAddParameter" />
          description: The Pool to be added.
        - id: options
          type: <xref uid="Models.PoolAddOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolAddResponse>
        type: Promise&lt;<xref uid="Models.PoolAddResponse" />&gt;
  - name: 'add(PoolAddParameter, PoolAddOptionalParams, ServiceCallback<void>)'
    uid: '@azure/batch.Pool.add_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function add(pool: PoolAddParameter, options: PoolAddOptionalParams,
        callback: ServiceCallback<void>)
      parameters:
        - id: pool
          type: <xref uid="@azure/batch.PoolAddParameter" />
          description: The Pool to be added.
        - id: options
          type: <xref uid="@azure/batch.PoolAddOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'add(PoolAddParameter, ServiceCallback<void>)'
    uid: '@azure/batch.Pool.add_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function add(pool: PoolAddParameter, callback: ServiceCallback<void>)'
      parameters:
        - id: pool
          type: <xref uid="@azure/batch.PoolAddParameter" />
          description: The Pool to be added.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, Models.PoolDeleteMethodOptionalParams)'
    uid: '@azure/batch.Pool.deleteMethod'
    package: '@azure/batch'
    summary: >-
      When you request that a Pool be deleted, the following actions occur: the
      Pool state is set to

      deleting; any ongoing resize operation on the Pool are stopped; the Batch
      service starts

      resizing the Pool to zero Compute Nodes; any Tasks running on existing
      Compute Nodes are

      terminated and requeued (as if a resize Pool operation had been requested
      with the default

      requeue option); finally, the Pool is removed from the system. Because
      running Tasks are

      requeued, the user can rerun these Tasks by updating their Job to target a
      different Pool. The

      Tasks can then run on the new Pool. If you want to override the requeue
      behavior, then you

      should call resize Pool explicitly to shrink the Pool to zero size before
      deleting the Pool. If

      you call an Update, Patch or Delete API on a Pool in the deleting state,
      it will fail with HTTP

      status code 409 with error code PoolBeingDeleted.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(poolId: string, options?:
        Models.PoolDeleteMethodOptionalParams):
        Promise<Models.PoolDeleteResponse>
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to delete.
        - id: options
          type: <xref uid="Models.PoolDeleteMethodOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolDeleteResponse>
        type: Promise&lt;<xref uid="Models.PoolDeleteResponse" />&gt;
  - name: >-
      deleteMethod(string, PoolDeleteMethodOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/batch.Pool.deleteMethod_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(poolId: string, options:
        PoolDeleteMethodOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to delete.
        - id: options
          type: <xref uid="@azure/batch.PoolDeleteMethodOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'deleteMethod(string, ServiceCallback<void>)'
    uid: '@azure/batch.Pool.deleteMethod_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteMethod(poolId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to delete.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'disableAutoScale(string, Models.PoolDisableAutoScaleOptionalParams)'
    uid: '@azure/batch.Pool.disableAutoScale'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disableAutoScale(poolId: string, options?:
        Models.PoolDisableAutoScaleOptionalParams):
        Promise<Models.PoolDisableAutoScaleResponse>
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool on which to disable automatic scaling.
        - id: options
          type: <xref uid="Models.PoolDisableAutoScaleOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolDisableAutoScaleResponse>
        type: Promise&lt;<xref uid="Models.PoolDisableAutoScaleResponse" />&gt;
  - name: >-
      disableAutoScale(string, PoolDisableAutoScaleOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/batch.Pool.disableAutoScale_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disableAutoScale(poolId: string, options:
        PoolDisableAutoScaleOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool on which to disable automatic scaling.
        - id: options
          type: <xref uid="@azure/batch.PoolDisableAutoScaleOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'disableAutoScale(string, ServiceCallback<void>)'
    uid: '@azure/batch.Pool.disableAutoScale_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function disableAutoScale(poolId: string, callback:
        ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool on which to disable automatic scaling.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      enableAutoScale(string, PoolEnableAutoScaleParameter,
      Models.PoolEnableAutoScaleOptionalParams)
    uid: '@azure/batch.Pool.enableAutoScale'
    package: '@azure/batch'
    summary: >-
      You cannot enable automatic scaling on a Pool if a resize operation is in
      progress on the Pool.

      If automatic scaling of the Pool is currently disabled, you must specify a
      valid autoscale

      formula as part of the request. If automatic scaling of the Pool is
      already enabled, you may

      specify a new autoscale formula and/or a new evaluation interval. You
      cannot call this API for

      the same Pool more than once every 30 seconds.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function enableAutoScale(poolId: string, poolEnableAutoScaleParameter:
        PoolEnableAutoScaleParameter, options?:
        Models.PoolEnableAutoScaleOptionalParams):
        Promise<Models.PoolEnableAutoScaleResponse>
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool on which to enable automatic scaling.
        - id: poolEnableAutoScaleParameter
          type: <xref uid="@azure/batch.PoolEnableAutoScaleParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="Models.PoolEnableAutoScaleOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolEnableAutoScaleResponse>
        type: Promise&lt;<xref uid="Models.PoolEnableAutoScaleResponse" />&gt;
  - name: >-
      enableAutoScale(string, PoolEnableAutoScaleParameter,
      PoolEnableAutoScaleOptionalParams, ServiceCallback<void>)
    uid: '@azure/batch.Pool.enableAutoScale_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function enableAutoScale(poolId: string, poolEnableAutoScaleParameter:
        PoolEnableAutoScaleParameter, options:
        PoolEnableAutoScaleOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool on which to enable automatic scaling.
        - id: poolEnableAutoScaleParameter
          type: <xref uid="@azure/batch.PoolEnableAutoScaleParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="@azure/batch.PoolEnableAutoScaleOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      enableAutoScale(string, PoolEnableAutoScaleParameter,
      ServiceCallback<void>)
    uid: '@azure/batch.Pool.enableAutoScale_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function enableAutoScale(poolId: string, poolEnableAutoScaleParameter:
        PoolEnableAutoScaleParameter, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool on which to enable automatic scaling.
        - id: poolEnableAutoScaleParameter
          type: <xref uid="@azure/batch.PoolEnableAutoScaleParameter" />
          description: The parameters for the request.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      evaluateAutoScale(string, string,
      Models.PoolEvaluateAutoScaleOptionalParams)
    uid: '@azure/batch.Pool.evaluateAutoScale'
    package: '@azure/batch'
    summary: >-
      This API is primarily for validating an autoscale formula, as it simply
      returns the result

      without applying the formula to the Pool. The Pool must have auto scaling
      enabled in order to

      evaluate a formula.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function evaluateAutoScale(poolId: string, autoScaleFormula: string,
        options?: Models.PoolEvaluateAutoScaleOptionalParams):
        Promise<Models.PoolEvaluateAutoScaleResponse>
      parameters:
        - id: poolId
          type: string
          description: >-
            The ID of the Pool on which to evaluate the automatic scaling
            formula.
        - id: autoScaleFormula
          type: string
          description: >-
            The formula for the desired number of Compute Nodes in the Pool. The

            formula is validated and its results calculated, but it is not
            applied to the Pool. To apply the

            formula to the Pool, 'Enable automatic scaling on a Pool'. For more
            information about specifying

            this formula, see Automatically scale Compute Nodes in an Azure
            Batch Pool

            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
        - id: options
          type: <xref uid="Models.PoolEvaluateAutoScaleOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolEvaluateAutoScaleResponse>
        type: Promise&lt;<xref uid="Models.PoolEvaluateAutoScaleResponse" />&gt;
  - name: >-
      evaluateAutoScale(string, string, PoolEvaluateAutoScaleOptionalParams,
      ServiceCallback<AutoScaleRun>)
    uid: '@azure/batch.Pool.evaluateAutoScale_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function evaluateAutoScale(poolId: string, autoScaleFormula: string,
        options: PoolEvaluateAutoScaleOptionalParams, callback:
        ServiceCallback<AutoScaleRun>)
      parameters:
        - id: poolId
          type: string
          description: >-
            The ID of the Pool on which to evaluate the automatic scaling
            formula.
        - id: autoScaleFormula
          type: string
          description: >-
            The formula for the desired number of Compute Nodes in the Pool. The

            formula is validated and its results calculated, but it is not
            applied to the Pool. To apply the

            formula to the Pool, 'Enable automatic scaling on a Pool'. For more
            information about specifying

            this formula, see Automatically scale Compute Nodes in an Azure
            Batch Pool

            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
        - id: options
          type: <xref uid="@azure/batch.PoolEvaluateAutoScaleOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/batch.AutoScaleRun" />&gt;
          description: |
            The callback
  - name: 'evaluateAutoScale(string, string, ServiceCallback<AutoScaleRun>)'
    uid: '@azure/batch.Pool.evaluateAutoScale_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function evaluateAutoScale(poolId: string, autoScaleFormula: string,
        callback: ServiceCallback<AutoScaleRun>)
      parameters:
        - id: poolId
          type: string
          description: >-
            The ID of the Pool on which to evaluate the automatic scaling
            formula.
        - id: autoScaleFormula
          type: string
          description: >-
            The formula for the desired number of Compute Nodes in the Pool. The

            formula is validated and its results calculated, but it is not
            applied to the Pool. To apply the

            formula to the Pool, 'Enable automatic scaling on a Pool'. For more
            information about specifying

            this formula, see Automatically scale Compute Nodes in an Azure
            Batch Pool

            (https://azure.microsoft.com/en-us/documentation/articles/batch-automatic-scaling).
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/batch.AutoScaleRun" />&gt;
          description: |
            The callback
  - name: 'exists(string, Models.PoolExistsOptionalParams)'
    uid: '@azure/batch.Pool.exists'
    package: '@azure/batch'
    summary: Gets basic properties of a Pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exists(poolId: string, options?:
        Models.PoolExistsOptionalParams): Promise<Models.PoolExistsResponse>
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to get.
        - id: options
          type: <xref uid="Models.PoolExistsOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolExistsResponse>
        type: Promise&lt;<xref uid="Models.PoolExistsResponse" />&gt;
  - name: 'exists(string, PoolExistsOptionalParams, ServiceCallback<boolean>)'
    uid: '@azure/batch.Pool.exists_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function exists(poolId: string, options: PoolExistsOptionalParams,
        callback: ServiceCallback<boolean>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to get.
        - id: options
          type: <xref uid="@azure/batch.PoolExistsOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: 'exists(string, ServiceCallback<boolean>)'
    uid: '@azure/batch.Pool.exists_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function exists(poolId: string, callback: ServiceCallback<boolean>)'
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to get.
        - id: callback
          type: ServiceCallback&lt;boolean&gt;
          description: |
            The callback
  - name: 'get(string, Models.PoolGetOptionalParams)'
    uid: '@azure/batch.Pool.get'
    package: '@azure/batch'
    summary: Gets information about the specified Pool.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(poolId: string, options?: Models.PoolGetOptionalParams):
        Promise<Models.PoolGetResponse>
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to get.
        - id: options
          type: <xref uid="Models.PoolGetOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolGetResponse>
        type: Promise&lt;<xref uid="Models.PoolGetResponse" />&gt;
  - name: 'get(string, PoolGetOptionalParams, ServiceCallback<CloudPool>)'
    uid: '@azure/batch.Pool.get_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(poolId: string, options: PoolGetOptionalParams, callback:
        ServiceCallback<CloudPool>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to get.
        - id: options
          type: <xref uid="@azure/batch.PoolGetOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/batch.CloudPool" />&gt;
          description: |
            The callback
  - name: 'get(string, ServiceCallback<CloudPool>)'
    uid: '@azure/batch.Pool.get_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function get(poolId: string, callback: ServiceCallback<CloudPool>)'
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to get.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/batch.CloudPool" />&gt;
          description: |
            The callback
  - name: >-
      getAllLifetimeStatistics(Models.PoolGetAllLifetimeStatisticsOptionalParams)
    uid: '@azure/batch.Pool.getAllLifetimeStatistics'
    package: '@azure/batch'
    summary: >-
      Statistics are aggregated across all Pools that have ever existed in the
      Account, from Account

      creation to the last update time of the statistics. The statistics may not
      be immediately

      available. The Batch service performs periodic roll-up of statistics. The
      typical delay is about

      30 minutes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAllLifetimeStatistics(options?:
        Models.PoolGetAllLifetimeStatisticsOptionalParams):
        Promise<Models.PoolGetAllLifetimeStatisticsResponse>
      parameters:
        - id: options
          type: <xref uid="Models.PoolGetAllLifetimeStatisticsOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolGetAllLifetimeStatisticsResponse>
        type: >-
          Promise&lt;<xref uid="Models.PoolGetAllLifetimeStatisticsResponse"
          />&gt;
  - name: >-
      getAllLifetimeStatistics(PoolGetAllLifetimeStatisticsOptionalParams,
      ServiceCallback<PoolStatistics>)
    uid: '@azure/batch.Pool.getAllLifetimeStatistics_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAllLifetimeStatistics(options:
        PoolGetAllLifetimeStatisticsOptionalParams, callback:
        ServiceCallback<PoolStatistics>)
      parameters:
        - id: options
          type: >-
            <xref uid="@azure/batch.PoolGetAllLifetimeStatisticsOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/batch.PoolStatistics" />&gt;
          description: |
            The callback
  - name: getAllLifetimeStatistics(ServiceCallback<PoolStatistics>)
    uid: '@azure/batch.Pool.getAllLifetimeStatistics_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getAllLifetimeStatistics(callback:
        ServiceCallback<PoolStatistics>)
      parameters:
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/batch.PoolStatistics" />&gt;
          description: |
            The callback
  - name: list(Models.PoolListOptionalParams)
    uid: '@azure/batch.Pool.list'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options?: Models.PoolListOptionalParams):
        Promise<Models.PoolListResponse>
      parameters:
        - id: options
          type: <xref uid="Models.PoolListOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolListResponse>
        type: Promise&lt;<xref uid="Models.PoolListResponse" />&gt;
  - name: 'list(PoolListOptionalParams, ServiceCallback<CloudPoolListResult>)'
    uid: '@azure/batch.Pool.list_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(options: PoolListOptionalParams, callback:
        ServiceCallback<CloudPoolListResult>)
      parameters:
        - id: options
          type: <xref uid="@azure/batch.PoolListOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/batch.CloudPoolListResult"
            />&gt;
          description: |
            The callback
  - name: list(ServiceCallback<CloudPoolListResult>)
    uid: '@azure/batch.Pool.list_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function list(callback: ServiceCallback<CloudPoolListResult>)'
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/batch.CloudPoolListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, Models.PoolListNextOptionalParams)'
    uid: '@azure/batch.Pool.listNext'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        Models.PoolListNextOptionalParams): Promise<Models.PoolListResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.PoolListNextOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolListResponse>
        type: Promise&lt;<xref uid="Models.PoolListResponse" />&gt;
  - name: >-
      listNext(string, PoolListNextOptionalParams,
      ServiceCallback<CloudPoolListResult>)
    uid: '@azure/batch.Pool.listNext_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options:
        PoolListNextOptionalParams, callback:
        ServiceCallback<CloudPoolListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="@azure/batch.PoolListNextOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/batch.CloudPoolListResult"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<CloudPoolListResult>)'
    uid: '@azure/batch.Pool.listNext_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<CloudPoolListResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/batch.CloudPoolListResult"
            />&gt;
          description: |
            The callback
  - name: listUsageMetrics(Models.PoolListUsageMetricsOptionalParams)
    uid: '@azure/batch.Pool.listUsageMetrics'
    package: '@azure/batch'
    summary: >-
      If you do not specify a $filter clause including a poolId, the response
      includes all Pools that

      existed in the Account in the time range of the returned aggregation
      intervals. If you do not

      specify a $filter clause including a startTime or endTime these filters
      default to the start and

      end times of the last aggregation interval currently available; that is,
      only the last

      aggregation interval is returned.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsageMetrics(options?:
        Models.PoolListUsageMetricsOptionalParams):
        Promise<Models.PoolListUsageMetricsResponse>
      parameters:
        - id: options
          type: <xref uid="Models.PoolListUsageMetricsOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolListUsageMetricsResponse>
        type: Promise&lt;<xref uid="Models.PoolListUsageMetricsResponse" />&gt;
  - name: >-
      listUsageMetrics(PoolListUsageMetricsOptionalParams,
      ServiceCallback<PoolListUsageMetricsResult>)
    uid: '@azure/batch.Pool.listUsageMetrics_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsageMetrics(options: PoolListUsageMetricsOptionalParams,
        callback: ServiceCallback<PoolListUsageMetricsResult>)
      parameters:
        - id: options
          type: <xref uid="@azure/batch.PoolListUsageMetricsOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/batch.PoolListUsageMetricsResult" />&gt;
          description: |
            The callback
  - name: listUsageMetrics(ServiceCallback<PoolListUsageMetricsResult>)
    uid: '@azure/batch.Pool.listUsageMetrics_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsageMetrics(callback:
        ServiceCallback<PoolListUsageMetricsResult>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/batch.PoolListUsageMetricsResult" />&gt;
          description: |
            The callback
  - name: >-
      listUsageMetricsNext(string,
      Models.PoolListUsageMetricsNextOptionalParams)
    uid: '@azure/batch.Pool.listUsageMetricsNext'
    package: '@azure/batch'
    summary: >-
      If you do not specify a $filter clause including a poolId, the response
      includes all Pools that

      existed in the Account in the time range of the returned aggregation
      intervals. If you do not

      specify a $filter clause including a startTime or endTime these filters
      default to the start and

      end times of the last aggregation interval currently available; that is,
      only the last

      aggregation interval is returned.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsageMetricsNext(nextPageLink: string, options?:
        Models.PoolListUsageMetricsNextOptionalParams):
        Promise<Models.PoolListUsageMetricsResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="Models.PoolListUsageMetricsNextOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolListUsageMetricsResponse>
        type: Promise&lt;<xref uid="Models.PoolListUsageMetricsResponse" />&gt;
  - name: >-
      listUsageMetricsNext(string, PoolListUsageMetricsNextOptionalParams,
      ServiceCallback<PoolListUsageMetricsResult>)
    uid: '@azure/batch.Pool.listUsageMetricsNext_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsageMetricsNext(nextPageLink: string, options:
        PoolListUsageMetricsNextOptionalParams, callback:
        ServiceCallback<PoolListUsageMetricsResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="@azure/batch.PoolListUsageMetricsNextOptionalParams" />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/batch.PoolListUsageMetricsResult" />&gt;
          description: |
            The callback
  - name: 'listUsageMetricsNext(string, ServiceCallback<PoolListUsageMetricsResult>)'
    uid: '@azure/batch.Pool.listUsageMetricsNext_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listUsageMetricsNext(nextPageLink: string, callback:
        ServiceCallback<PoolListUsageMetricsResult>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/batch.PoolListUsageMetricsResult" />&gt;
          description: |
            The callback
  - name: 'patch(string, PoolPatchParameter, Models.PoolPatchOptionalParams)'
    uid: '@azure/batch.Pool.patch'
    package: '@azure/batch'
    summary: >-
      This only replaces the Pool properties specified in the request. For
      example, if the Pool has a

      StartTask associated with it, and a request does not specify a StartTask
      element, then the Pool

      keeps the existing StartTask.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function patch(poolId: string, poolPatchParameter: PoolPatchParameter,
        options?: Models.PoolPatchOptionalParams):
        Promise<Models.PoolPatchResponse>
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to update.
        - id: poolPatchParameter
          type: <xref uid="@azure/batch.PoolPatchParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="Models.PoolPatchOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolPatchResponse>
        type: Promise&lt;<xref uid="Models.PoolPatchResponse" />&gt;
  - name: >-
      patch(string, PoolPatchParameter, PoolPatchOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/batch.Pool.patch_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function patch(poolId: string, poolPatchParameter: PoolPatchParameter,
        options: PoolPatchOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to update.
        - id: poolPatchParameter
          type: <xref uid="@azure/batch.PoolPatchParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="@azure/batch.PoolPatchOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'patch(string, PoolPatchParameter, ServiceCallback<void>)'
    uid: '@azure/batch.Pool.patch_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function patch(poolId: string, poolPatchParameter: PoolPatchParameter,
        callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to update.
        - id: poolPatchParameter
          type: <xref uid="@azure/batch.PoolPatchParameter" />
          description: The parameters for the request.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      removeNodes(string, NodeRemoveParameter,
      Models.PoolRemoveNodesOptionalParams)
    uid: '@azure/batch.Pool.removeNodes'
    package: '@azure/batch'
    summary: >-
      This operation can only run when the allocation state of the Pool is
      steady. When this operation

      runs, the allocation state changes from steady to resizing.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeNodes(poolId: string, nodeRemoveParameter:
        NodeRemoveParameter, options?: Models.PoolRemoveNodesOptionalParams):
        Promise<Models.PoolRemoveNodesResponse>
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool from which you want to remove Compute Nodes.
        - id: nodeRemoveParameter
          type: <xref uid="@azure/batch.NodeRemoveParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="Models.PoolRemoveNodesOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolRemoveNodesResponse>
        type: Promise&lt;<xref uid="Models.PoolRemoveNodesResponse" />&gt;
  - name: >-
      removeNodes(string, NodeRemoveParameter, PoolRemoveNodesOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/batch.Pool.removeNodes_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeNodes(poolId: string, nodeRemoveParameter:
        NodeRemoveParameter, options: PoolRemoveNodesOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool from which you want to remove Compute Nodes.
        - id: nodeRemoveParameter
          type: <xref uid="@azure/batch.NodeRemoveParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="@azure/batch.PoolRemoveNodesOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'removeNodes(string, NodeRemoveParameter, ServiceCallback<void>)'
    uid: '@azure/batch.Pool.removeNodes_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function removeNodes(poolId: string, nodeRemoveParameter:
        NodeRemoveParameter, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool from which you want to remove Compute Nodes.
        - id: nodeRemoveParameter
          type: <xref uid="@azure/batch.NodeRemoveParameter" />
          description: The parameters for the request.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'resize(string, PoolResizeParameter, Models.PoolResizeOptionalParams)'
    uid: '@azure/batch.Pool.resize'
    package: '@azure/batch'
    summary: >-
      You can only resize a Pool when its allocation state is steady. If the
      Pool is already resizing,

      the request fails with status code 409. When you resize a Pool, the Pool's
      allocation state

      changes from steady to resizing. You cannot resize Pools which are
      configured for automatic

      scaling. If you try to do this, the Batch service returns an error 409. If
      you resize a Pool

      downwards, the Batch service chooses which Compute Nodes to remove. To
      remove specific Compute

      Nodes, use the Pool remove Compute Nodes API instead.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resize(poolId: string, poolResizeParameter:
        PoolResizeParameter, options?: Models.PoolResizeOptionalParams):
        Promise<Models.PoolResizeResponse>
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to resize.
        - id: poolResizeParameter
          type: <xref uid="@azure/batch.PoolResizeParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="Models.PoolResizeOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolResizeResponse>
        type: Promise&lt;<xref uid="Models.PoolResizeResponse" />&gt;
  - name: >-
      resize(string, PoolResizeParameter, PoolResizeOptionalParams,
      ServiceCallback<void>)
    uid: '@azure/batch.Pool.resize_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resize(poolId: string, poolResizeParameter:
        PoolResizeParameter, options: PoolResizeOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to resize.
        - id: poolResizeParameter
          type: <xref uid="@azure/batch.PoolResizeParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="@azure/batch.PoolResizeOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'resize(string, PoolResizeParameter, ServiceCallback<void>)'
    uid: '@azure/batch.Pool.resize_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function resize(poolId: string, poolResizeParameter:
        PoolResizeParameter, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to resize.
        - id: poolResizeParameter
          type: <xref uid="@azure/batch.PoolResizeParameter" />
          description: The parameters for the request.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopResize(string, Models.PoolStopResizeOptionalParams)'
    uid: '@azure/batch.Pool.stopResize'
    package: '@azure/batch'
    summary: >-
      This does not restore the Pool to its previous state before the resize
      operation: it only stops

      any further changes being made, and the Pool maintains its current state.
      After stopping, the

      Pool stabilizes at the number of Compute Nodes it was at when the stop
      operation was done.

      During the stop operation, the Pool allocation state changes first to
      stopping and then to

      steady. A resize operation need not be an explicit resize Pool request;
      this API can also be

      used to halt the initial sizing of the Pool when it is created.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopResize(poolId: string, options?:
        Models.PoolStopResizeOptionalParams):
        Promise<Models.PoolStopResizeResponse>
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool whose resizing you want to stop.
        - id: options
          type: <xref uid="Models.PoolStopResizeOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolStopResizeResponse>
        type: Promise&lt;<xref uid="Models.PoolStopResizeResponse" />&gt;
  - name: 'stopResize(string, PoolStopResizeOptionalParams, ServiceCallback<void>)'
    uid: '@azure/batch.Pool.stopResize_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function stopResize(poolId: string, options:
        PoolStopResizeOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool whose resizing you want to stop.
        - id: options
          type: <xref uid="@azure/batch.PoolStopResizeOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'stopResize(string, ServiceCallback<void>)'
    uid: '@azure/batch.Pool.stopResize_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function stopResize(poolId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool whose resizing you want to stop.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      updateProperties(string, PoolUpdatePropertiesParameter,
      Models.PoolUpdatePropertiesOptionalParams)
    uid: '@azure/batch.Pool.updateProperties'
    package: '@azure/batch'
    summary: >-
      This fully replaces all the updatable properties of the Pool. For example,
      if the Pool has a

      StartTask associated with it and if StartTask is not specified with this
      request, then the Batch

      service will remove the existing StartTask.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateProperties(poolId: string, poolUpdatePropertiesParameter:
        PoolUpdatePropertiesParameter, options?:
        Models.PoolUpdatePropertiesOptionalParams):
        Promise<Models.PoolUpdatePropertiesResponse>
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to update.
        - id: poolUpdatePropertiesParameter
          type: <xref uid="@azure/batch.PoolUpdatePropertiesParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="Models.PoolUpdatePropertiesOptionalParams" />
          description: ''
      return:
        description: Promise<Models.PoolUpdatePropertiesResponse>
        type: Promise&lt;<xref uid="Models.PoolUpdatePropertiesResponse" />&gt;
  - name: >-
      updateProperties(string, PoolUpdatePropertiesParameter,
      PoolUpdatePropertiesOptionalParams, ServiceCallback<void>)
    uid: '@azure/batch.Pool.updateProperties_2'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateProperties(poolId: string, poolUpdatePropertiesParameter:
        PoolUpdatePropertiesParameter, options:
        PoolUpdatePropertiesOptionalParams, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to update.
        - id: poolUpdatePropertiesParameter
          type: <xref uid="@azure/batch.PoolUpdatePropertiesParameter" />
          description: The parameters for the request.
        - id: options
          type: <xref uid="@azure/batch.PoolUpdatePropertiesOptionalParams" />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      updateProperties(string, PoolUpdatePropertiesParameter,
      ServiceCallback<void>)
    uid: '@azure/batch.Pool.updateProperties_1'
    package: '@azure/batch'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function updateProperties(poolId: string, poolUpdatePropertiesParameter:
        PoolUpdatePropertiesParameter, callback: ServiceCallback<void>)
      parameters:
        - id: poolId
          type: string
          description: The ID of the Pool to update.
        - id: poolUpdatePropertiesParameter
          type: <xref uid="@azure/batch.PoolUpdatePropertiesParameter" />
          description: The parameters for the request.
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback

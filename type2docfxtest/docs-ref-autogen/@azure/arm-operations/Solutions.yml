### YamlMime:TSType
name: Solutions
uid: '@azure/arm-operations.Solutions'
package: '@azure/arm-operations'
summary: Class representing a Solutions.
fullName: Solutions
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: Solutions(OperationsManagementClientContext)
    uid: '@azure/arm-operations.Solutions.constructor'
    package: '@azure/arm-operations'
    summary: Create a Solutions.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new Solutions(client: OperationsManagementClientContext)'
      parameters:
        - id: client
          type: >-
            <xref uid="@azure/arm-operations.OperationsManagementClientContext"
            />
          description: |
            Reference to the service client.
methods:
  - name: 'beginCreateOrUpdate(string, string, Solution, msRest.RequestOptionsBase)'
    uid: '@azure/arm-operations.Solutions.beginCreateOrUpdate'
    package: '@azure/arm-operations'
    summary: Creates or updates the Solution.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateOrUpdate(resourceGroupName: string, solutionName:
        string, parameters: Solution, options?: msRest.RequestOptionsBase):
        Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: solutionName
          type: string
          description: User Solution Name.
        - id: parameters
          type: <xref uid="@azure/arm-operations.Solution" />
          description: The parameters required to create OMS Solution.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: 'beginDeleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-operations.Solutions.beginDeleteMethod'
    package: '@azure/arm-operations'
    summary: Deletes the solution in the subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteMethod(resourceGroupName: string, solutionName:
        string, options?: msRest.RequestOptionsBase): Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: solutionName
          type: string
          description: User Solution Name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: 'beginUpdate(string, string, SolutionPatch, msRest.RequestOptionsBase)'
    uid: '@azure/arm-operations.Solutions.beginUpdate'
    package: '@azure/arm-operations'
    summary: Patch a Solution. Only updating tags supported.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, solutionName: string,
        parameters: SolutionPatch, options?: msRest.RequestOptionsBase):
        Promise<LROPoller>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: solutionName
          type: string
          description: User Solution Name.
        - id: parameters
          type: <xref uid="@azure/arm-operations.SolutionPatch" />
          description: The parameters required to patch a Solution.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRestAzure.LROPoller>
        type: Promise&lt;LROPoller&gt;
  - name: 'createOrUpdate(string, string, Solution, msRest.RequestOptionsBase)'
    uid: '@azure/arm-operations.Solutions.createOrUpdate'
    package: '@azure/arm-operations'
    summary: Creates or updates the Solution.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(resourceGroupName: string, solutionName: string,
        parameters: Solution, options?: msRest.RequestOptionsBase):
        Promise<Models.SolutionsCreateOrUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: solutionName
          type: string
          description: User Solution Name.
        - id: parameters
          type: <xref uid="@azure/arm-operations.Solution" />
          description: The parameters required to create OMS Solution.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SolutionsCreateOrUpdateResponse>
        type: Promise&lt;<xref uid="Models.SolutionsCreateOrUpdateResponse" />&gt;
  - name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-operations.Solutions.deleteMethod'
    package: '@azure/arm-operations'
    summary: Deletes the solution in the subscription.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(resourceGroupName: string, solutionName: string,
        options?: msRest.RequestOptionsBase): Promise<RestResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: solutionName
          type: string
          description: User Solution Name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: 'get(string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-operations.Solutions.get'
    package: '@azure/arm-operations'
    summary: Retrieves the user solution.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, solutionName: string, options?:
        msRest.RequestOptionsBase): Promise<Models.SolutionsGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: solutionName
          type: string
          description: User Solution Name.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SolutionsGetResponse>
        type: Promise&lt;<xref uid="Models.SolutionsGetResponse" />&gt;
  - name: 'get(string, string, RequestOptionsBase, ServiceCallback<Solution>)'
    uid: '@azure/arm-operations.Solutions.get_2'
    package: '@azure/arm-operations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, solutionName: string, options:
        RequestOptionsBase, callback: ServiceCallback<Solution>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: solutionName
          type: string
          description: User Solution Name.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-operations.Solution" />&gt;
          description: |
            The callback
  - name: 'get(string, string, ServiceCallback<Solution>)'
    uid: '@azure/arm-operations.Solutions.get_1'
    package: '@azure/arm-operations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, solutionName: string, callback:
        ServiceCallback<Solution>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: solutionName
          type: string
          description: User Solution Name.
        - id: callback
          type: ServiceCallback&lt;<xref uid="@azure/arm-operations.Solution" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-operations.Solutions.listByResourceGroup'
    package: '@azure/arm-operations'
    summary: >-
      Retrieves the solution list. It will retrieve both first party and third
      party solutions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.SolutionsListByResourceGroupResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SolutionsListByResourceGroupResponse>
        type: >-
          Promise&lt;<xref uid="Models.SolutionsListByResourceGroupResponse"
          />&gt;
  - name: >-
      listByResourceGroup(string, RequestOptionsBase,
      ServiceCallback<SolutionPropertiesList>)
    uid: '@azure/arm-operations.Solutions.listByResourceGroup_2'
    package: '@azure/arm-operations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, options:
        RequestOptionsBase, callback: ServiceCallback<SolutionPropertiesList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-operations.SolutionPropertiesList" />&gt;
          description: |
            The callback
  - name: 'listByResourceGroup(string, ServiceCallback<SolutionPropertiesList>)'
    uid: '@azure/arm-operations.Solutions.listByResourceGroup_1'
    package: '@azure/arm-operations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listByResourceGroup(resourceGroupName: string, callback:
        ServiceCallback<SolutionPropertiesList>)
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-operations.SolutionPropertiesList" />&gt;
          description: |
            The callback
  - name: listBySubscription(msRest.RequestOptionsBase)
    uid: '@azure/arm-operations.Solutions.listBySubscription'
    package: '@azure/arm-operations'
    summary: >-
      Retrieves the solution list. It will retrieve both first party and third
      party solutions
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options?: msRest.RequestOptionsBase):
        Promise<Models.SolutionsListBySubscriptionResponse>
      parameters:
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SolutionsListBySubscriptionResponse>
        type: >-
          Promise&lt;<xref uid="Models.SolutionsListBySubscriptionResponse"
          />&gt;
  - name: >-
      listBySubscription(RequestOptionsBase,
      ServiceCallback<SolutionPropertiesList>)
    uid: '@azure/arm-operations.Solutions.listBySubscription_2'
    package: '@azure/arm-operations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(options: RequestOptionsBase, callback:
        ServiceCallback<SolutionPropertiesList>)
      parameters:
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-operations.SolutionPropertiesList" />&gt;
          description: |
            The callback
  - name: listBySubscription(ServiceCallback<SolutionPropertiesList>)
    uid: '@azure/arm-operations.Solutions.listBySubscription_1'
    package: '@azure/arm-operations'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listBySubscription(callback:
        ServiceCallback<SolutionPropertiesList>)
      parameters:
        - id: callback
          type: >-
            ServiceCallback&lt;<xref
            uid="@azure/arm-operations.SolutionPropertiesList" />&gt;
          description: |
            The callback
  - name: 'update(string, string, SolutionPatch, msRest.RequestOptionsBase)'
    uid: '@azure/arm-operations.Solutions.update'
    package: '@azure/arm-operations'
    summary: Patch a Solution. Only updating tags supported.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(resourceGroupName: string, solutionName: string,
        parameters: SolutionPatch, options?: msRest.RequestOptionsBase):
        Promise<Models.SolutionsUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group to get. The name is case insensitive.
        - id: solutionName
          type: string
          description: User Solution Name.
        - id: parameters
          type: <xref uid="@azure/arm-operations.SolutionPatch" />
          description: The parameters required to patch a Solution.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.SolutionsUpdateResponse>
        type: Promise&lt;<xref uid="Models.SolutionsUpdateResponse" />&gt;

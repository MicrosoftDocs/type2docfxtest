### YamlMime:TSType
name: ServiceTasks
uid: '@azure/arm-datamigration.ServiceTasks'
package: '@azure/arm-datamigration'
summary: Class representing a ServiceTasks.
fullName: ServiceTasks
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: ServiceTasks(DataMigrationServiceClientContext)
    uid: '@azure/arm-datamigration.ServiceTasks.constructor'
    package: '@azure/arm-datamigration'
    summary: Create a ServiceTasks.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new ServiceTasks(client: DataMigrationServiceClientContext)'
      parameters:
        - id: client
          type: >-
            <xref
            uid="@azure/arm-datamigration.DataMigrationServiceClientContext" />
          description: |
            Reference to the service client.
methods:
  - name: 'cancel(string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-datamigration.ServiceTasks.cancel'
    package: '@azure/arm-datamigration'
    summary: >-
      The service tasks resource is a nested, proxy-only resource representing
      work performed by a DMS

      instance. This method cancels a service task if it's currently queued or
      running.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancel(groupName: string, serviceName: string, taskName:
        string, options?: msRest.RequestOptionsBase):
        Promise<Models.ServiceTasksCancelResponse>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServiceTasksCancelResponse>
        type: Promise&lt;<xref uid="Models.ServiceTasksCancelResponse" />&gt;
  - name: >-
      cancel(string, string, string, RequestOptionsBase,
      ServiceCallback<ProjectTask>)
    uid: '@azure/arm-datamigration.ServiceTasks.cancel_2'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancel(groupName: string, serviceName: string, taskName:
        string, options: RequestOptionsBase, callback:
        ServiceCallback<ProjectTask>)
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.ProjectTask"
            />&gt;
          description: |
            The callback
  - name: 'cancel(string, string, string, ServiceCallback<ProjectTask>)'
    uid: '@azure/arm-datamigration.ServiceTasks.cancel_1'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function cancel(groupName: string, serviceName: string, taskName:
        string, callback: ServiceCallback<ProjectTask>)
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.ProjectTask"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(ProjectTask, string, string, string,
      msRest.RequestOptionsBase)
    uid: '@azure/arm-datamigration.ServiceTasks.createOrUpdate'
    package: '@azure/arm-datamigration'
    summary: >-
      The service tasks resource is a nested, proxy-only resource representing
      work performed by a DMS

      instance. The PUT method creates a new service task or updates an existing
      one, although since

      service tasks have no mutable custom properties, there is little reason to
      update an existing

      one.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(parameters: ProjectTask, groupName: string,
        serviceName: string, taskName: string, options?:
        msRest.RequestOptionsBase):
        Promise<Models.ServiceTasksCreateOrUpdateResponse>
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-datamigration.ProjectTask" />
          description: Information about the task
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServiceTasksCreateOrUpdateResponse>
        type: >-
          Promise&lt;<xref uid="Models.ServiceTasksCreateOrUpdateResponse"
          />&gt;
  - name: >-
      createOrUpdate(ProjectTask, string, string, string, RequestOptionsBase,
      ServiceCallback<ProjectTask>)
    uid: '@azure/arm-datamigration.ServiceTasks.createOrUpdate_2'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(parameters: ProjectTask, groupName: string,
        serviceName: string, taskName: string, options: RequestOptionsBase,
        callback: ServiceCallback<ProjectTask>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-datamigration.ProjectTask" />
          description: Information about the task
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.ProjectTask"
            />&gt;
          description: |
            The callback
  - name: >-
      createOrUpdate(ProjectTask, string, string, string,
      ServiceCallback<ProjectTask>)
    uid: '@azure/arm-datamigration.ServiceTasks.createOrUpdate_1'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function createOrUpdate(parameters: ProjectTask, groupName: string,
        serviceName: string, taskName: string, callback:
        ServiceCallback<ProjectTask>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-datamigration.ProjectTask" />
          description: Information about the task
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.ProjectTask"
            />&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string,
      Models.ServiceTasksDeleteMethodOptionalParams)
    uid: '@azure/arm-datamigration.ServiceTasks.deleteMethod'
    package: '@azure/arm-datamigration'
    summary: >-
      The service tasks resource is a nested, proxy-only resource representing
      work performed by a DMS

      instance. The DELETE method deletes a service task, canceling it first if
      it's running.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(groupName: string, serviceName: string, taskName:
        string, options?: Models.ServiceTasksDeleteMethodOptionalParams):
        Promise<RestResponse>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: <xref uid="Models.ServiceTasksDeleteMethodOptionalParams" />
          description: ''
      return:
        description: Promise<msRest.RestResponse>
        type: Promise&lt;RestResponse&gt;
  - name: 'deleteMethod(string, string, string, ServiceCallback<void>)'
    uid: '@azure/arm-datamigration.ServiceTasks.deleteMethod_1'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(groupName: string, serviceName: string, taskName:
        string, callback: ServiceCallback<void>)
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: >-
      deleteMethod(string, string, string,
      ServiceTasksDeleteMethodOptionalParams, ServiceCallback<void>)
    uid: '@azure/arm-datamigration.ServiceTasks.deleteMethod_2'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function deleteMethod(groupName: string, serviceName: string, taskName:
        string, options: ServiceTasksDeleteMethodOptionalParams, callback:
        ServiceCallback<void>)
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: >-
            <xref
            uid="@azure/arm-datamigration.ServiceTasksDeleteMethodOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: ServiceCallback&lt;void&gt;
          description: |
            The callback
  - name: 'get(string, string, string, Models.ServiceTasksGetOptionalParams)'
    uid: '@azure/arm-datamigration.ServiceTasks.get'
    package: '@azure/arm-datamigration'
    summary: >-
      The service tasks resource is a nested, proxy-only resource representing
      work performed by a DMS

      instance. The GET method retrieves information about a service task.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(groupName: string, serviceName: string, taskName: string,
        options?: Models.ServiceTasksGetOptionalParams):
        Promise<Models.ServiceTasksGetResponse>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: <xref uid="Models.ServiceTasksGetOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ServiceTasksGetResponse>
        type: Promise&lt;<xref uid="Models.ServiceTasksGetResponse" />&gt;
  - name: 'get(string, string, string, ServiceCallback<ProjectTask>)'
    uid: '@azure/arm-datamigration.ServiceTasks.get_1'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(groupName: string, serviceName: string, taskName: string,
        callback: ServiceCallback<ProjectTask>)
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.ProjectTask"
            />&gt;
          description: |
            The callback
  - name: >-
      get(string, string, string, ServiceTasksGetOptionalParams,
      ServiceCallback<ProjectTask>)
    uid: '@azure/arm-datamigration.ServiceTasks.get_2'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function get(groupName: string, serviceName: string, taskName: string,
        options: ServiceTasksGetOptionalParams, callback:
        ServiceCallback<ProjectTask>)
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: >-
            <xref uid="@azure/arm-datamigration.ServiceTasksGetOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.ProjectTask"
            />&gt;
          description: |
            The callback
  - name: 'list(string, string, Models.ServiceTasksListOptionalParams)'
    uid: '@azure/arm-datamigration.ServiceTasks.list'
    package: '@azure/arm-datamigration'
    summary: >-
      The services resource is the top-level resource that represents the
      Database Migration Service.

      This method returns a list of service level tasks owned by a service
      resource. Some tasks may

      have a status of Unknown, which indicates that an error occurred while
      querying the status of

      that task.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(groupName: string, serviceName: string, options?:
        Models.ServiceTasksListOptionalParams):
        Promise<Models.ServiceTasksListResponse>
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: options
          type: <xref uid="Models.ServiceTasksListOptionalParams" />
          description: ''
      return:
        description: Promise<Models.ServiceTasksListResponse>
        type: Promise&lt;<xref uid="Models.ServiceTasksListResponse" />&gt;
  - name: 'list(string, string, ServiceCallback<TaskList>)'
    uid: '@azure/arm-datamigration.ServiceTasks.list_1'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(groupName: string, serviceName: string, callback:
        ServiceCallback<TaskList>)
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.TaskList"
            />&gt;
          description: |
            The callback
  - name: >-
      list(string, string, ServiceTasksListOptionalParams,
      ServiceCallback<TaskList>)
    uid: '@azure/arm-datamigration.ServiceTasks.list_2'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(groupName: string, serviceName: string, options:
        ServiceTasksListOptionalParams, callback: ServiceCallback<TaskList>)
      parameters:
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: options
          type: >-
            <xref uid="@azure/arm-datamigration.ServiceTasksListOptionalParams"
            />
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.TaskList"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-datamigration.ServiceTasks.listNext'
    package: '@azure/arm-datamigration'
    summary: >-
      The services resource is the top-level resource that represents the
      Database Migration Service.

      This method returns a list of service level tasks owned by a service
      resource. Some tasks may

      have a status of Unknown, which indicates that an error occurred while
      querying the status of

      that task.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options?:
        msRest.RequestOptionsBase): Promise<Models.ServiceTasksListNextResponse>
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServiceTasksListNextResponse>
        type: Promise&lt;<xref uid="Models.ServiceTasksListNextResponse" />&gt;
  - name: 'listNext(string, RequestOptionsBase, ServiceCallback<TaskList>)'
    uid: '@azure/arm-datamigration.ServiceTasks.listNext_2'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, options: RequestOptionsBase,
        callback: ServiceCallback<TaskList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.TaskList"
            />&gt;
          description: |
            The callback
  - name: 'listNext(string, ServiceCallback<TaskList>)'
    uid: '@azure/arm-datamigration.ServiceTasks.listNext_1'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function listNext(nextPageLink: string, callback:
        ServiceCallback<TaskList>)
      parameters:
        - id: nextPageLink
          type: string
          description: The NextLink from the previous successful call to List operation.
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.TaskList"
            />&gt;
          description: |
            The callback
  - name: 'update(ProjectTask, string, string, string, msRest.RequestOptionsBase)'
    uid: '@azure/arm-datamigration.ServiceTasks.update'
    package: '@azure/arm-datamigration'
    summary: >-
      The service tasks resource is a nested, proxy-only resource representing
      work performed by a DMS

      instance. The PATCH method updates an existing service task, but since
      service tasks have no

      mutable custom properties, there is little reason to do so.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(parameters: ProjectTask, groupName: string, serviceName:
        string, taskName: string, options?: msRest.RequestOptionsBase):
        Promise<Models.ServiceTasksUpdateResponse>
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-datamigration.ProjectTask" />
          description: Information about the task
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: <xref uid="msRest.RequestOptionsBase" />
          description: ''
      return:
        description: Promise<Models.ServiceTasksUpdateResponse>
        type: Promise&lt;<xref uid="Models.ServiceTasksUpdateResponse" />&gt;
  - name: >-
      update(ProjectTask, string, string, string, RequestOptionsBase,
      ServiceCallback<ProjectTask>)
    uid: '@azure/arm-datamigration.ServiceTasks.update_2'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(parameters: ProjectTask, groupName: string, serviceName:
        string, taskName: string, options: RequestOptionsBase, callback:
        ServiceCallback<ProjectTask>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-datamigration.ProjectTask" />
          description: Information about the task
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: options
          type: RequestOptionsBase
          description: The optional parameters
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.ProjectTask"
            />&gt;
          description: |
            The callback
  - name: 'update(ProjectTask, string, string, string, ServiceCallback<ProjectTask>)'
    uid: '@azure/arm-datamigration.ServiceTasks.update_1'
    package: '@azure/arm-datamigration'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function update(parameters: ProjectTask, groupName: string, serviceName:
        string, taskName: string, callback: ServiceCallback<ProjectTask>)
      parameters:
        - id: parameters
          type: <xref uid="@azure/arm-datamigration.ProjectTask" />
          description: Information about the task
        - id: groupName
          type: string
          description: Name of the resource group
        - id: serviceName
          type: string
          description: Name of the service
        - id: taskName
          type: string
          description: Name of the Task
        - id: callback
          type: >-
            ServiceCallback&lt;<xref uid="@azure/arm-datamigration.ProjectTask"
            />&gt;
          description: |
            The callback

### YamlMime:TSType
name: CassandraDataCenters
uid: '@azure/arm-cosmosdb.CassandraDataCenters'
package: '@azure/arm-cosmosdb'
summary: Interface representing a CassandraDataCenters.
fullName: CassandraDataCenters
remarks: ''
isDeprecated: false
type: interface
methods:
  - name: >-
      beginCreateUpdate(string, string, string, DataCenterResource,
      CassandraDataCentersCreateUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraDataCenters.beginCreateUpdate'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Create or update a managed Cassandra data center. When updating, overwrite
      all properties. To update

      only some properties, use PATCH.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdate(resourceGroupName: string, clusterName:
        string, dataCenterName: string, body: DataCenterResource, options?:
        CassandraDataCentersCreateUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraDataCentersCreateUpdateResponse>,
        CassandraDataCentersCreateUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: dataCenterName
          type: string
          description: Data center name in a managed Cassandra cluster.
        - id: body
          type: <xref uid="@azure/arm-cosmosdb.DataCenterResource" />
          description: Parameters specifying the managed Cassandra data center.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraDataCentersCreateUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraDataCentersCreateUpdateResponse"
          />&gt;, <xref
          uid="@azure/arm-cosmosdb.CassandraDataCentersCreateUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginCreateUpdateAndWait(string, string, string, DataCenterResource,
      CassandraDataCentersCreateUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraDataCenters.beginCreateUpdateAndWait'
    package: '@azure/arm-cosmosdb'
    summary: >-
      Create or update a managed Cassandra data center. When updating, overwrite
      all properties. To update

      only some properties, use PATCH.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateUpdateAndWait(resourceGroupName: string,
        clusterName: string, dataCenterName: string, body: DataCenterResource,
        options?: CassandraDataCentersCreateUpdateOptionalParams):
        Promise<CassandraDataCentersCreateUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: dataCenterName
          type: string
          description: Data center name in a managed Cassandra cluster.
        - id: body
          type: <xref uid="@azure/arm-cosmosdb.DataCenterResource" />
          description: Parameters specifying the managed Cassandra data center.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraDataCentersCreateUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraDataCentersCreateUpdateResponse"
          />&gt;
  - name: >-
      beginDelete(string, string, string,
      CassandraDataCentersDeleteOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraDataCenters.beginDelete'
    package: '@azure/arm-cosmosdb'
    summary: Delete a managed Cassandra data center.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDelete(resourceGroupName: string, clusterName: string,
        dataCenterName: string, options?:
        CassandraDataCentersDeleteOptionalParams):
        Promise<PollerLike<PollOperationState<void>, void>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: dataCenterName
          type: string
          description: Data center name in a managed Cassandra cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraDataCentersDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: 'Promise&lt;PollerLike&lt;PollOperationState&lt;void&gt;, void&gt;&gt;'
  - name: >-
      beginDeleteAndWait(string, string, string,
      CassandraDataCentersDeleteOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraDataCenters.beginDeleteAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Delete a managed Cassandra data center.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginDeleteAndWait(resourceGroupName: string, clusterName:
        string, dataCenterName: string, options?:
        CassandraDataCentersDeleteOptionalParams): Promise<void>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: dataCenterName
          type: string
          description: Data center name in a managed Cassandra cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraDataCentersDeleteOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: Promise&lt;void&gt;
  - name: >-
      beginUpdate(string, string, string, DataCenterResource,
      CassandraDataCentersUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraDataCenters.beginUpdate'
    package: '@azure/arm-cosmosdb'
    summary: Update some of the properties of a managed Cassandra data center.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdate(resourceGroupName: string, clusterName: string,
        dataCenterName: string, body: DataCenterResource, options?:
        CassandraDataCentersUpdateOptionalParams):
        Promise<PollerLike<PollOperationState<CassandraDataCentersUpdateResponse>,
        CassandraDataCentersUpdateResponse>>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: dataCenterName
          type: string
          description: Data center name in a managed Cassandra cluster.
        - id: body
          type: <xref uid="@azure/arm-cosmosdb.DataCenterResource" />
          description: >-
            Parameters to provide for specifying the managed Cassandra data
            center.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraDataCentersUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraDataCentersUpdateResponse" />&gt;,
          <xref uid="@azure/arm-cosmosdb.CassandraDataCentersUpdateResponse"
          />&gt;&gt;
  - name: >-
      beginUpdateAndWait(string, string, string, DataCenterResource,
      CassandraDataCentersUpdateOptionalParams)
    uid: '@azure/arm-cosmosdb.CassandraDataCenters.beginUpdateAndWait'
    package: '@azure/arm-cosmosdb'
    summary: Update some of the properties of a managed Cassandra data center.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function beginUpdateAndWait(resourceGroupName: string, clusterName:
        string, dataCenterName: string, body: DataCenterResource, options?:
        CassandraDataCentersUpdateOptionalParams):
        Promise<CassandraDataCentersUpdateResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: dataCenterName
          type: string
          description: Data center name in a managed Cassandra cluster.
        - id: body
          type: <xref uid="@azure/arm-cosmosdb.DataCenterResource" />
          description: >-
            Parameters to provide for specifying the managed Cassandra data
            center.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraDataCentersUpdateOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraDataCentersUpdateResponse" />&gt;
  - name: 'get(string, string, string, CassandraDataCentersGetOptionalParams)'
    uid: '@azure/arm-cosmosdb.CassandraDataCenters.get'
    package: '@azure/arm-cosmosdb'
    summary: Get the properties of a managed Cassandra data center.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function get(resourceGroupName: string, clusterName: string,
        dataCenterName: string, options?:
        CassandraDataCentersGetOptionalParams):
        Promise<CassandraDataCentersGetResponse>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: dataCenterName
          type: string
          description: Data center name in a managed Cassandra cluster.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraDataCentersGetOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-cosmosdb.CassandraDataCentersGetResponse" />&gt;
  - name: 'list(string, string, CassandraDataCentersListOptionalParams)'
    uid: '@azure/arm-cosmosdb.CassandraDataCenters.list'
    package: '@azure/arm-cosmosdb'
    summary: List all data centers in a particular managed Cassandra cluster.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceGroupName: string, clusterName: string, options?:
        CassandraDataCentersListOptionalParams):
        PagedAsyncIterableIterator<DataCenterResource>
      parameters:
        - id: resourceGroupName
          type: string
          description: The name of the resource group. The name is case insensitive.
        - id: clusterName
          type: string
          description: Managed Cassandra cluster name.
        - id: options
          type: >-
            <xref
            uid="@azure/arm-cosmosdb.CassandraDataCentersListOptionalParams" />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-cosmosdb.DataCenterResource" />&gt;

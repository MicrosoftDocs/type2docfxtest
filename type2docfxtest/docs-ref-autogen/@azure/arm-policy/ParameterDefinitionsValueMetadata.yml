### YamlMime:TSType
name: ParameterDefinitionsValueMetadata
uid: '@azure/arm-policy.ParameterDefinitionsValueMetadata'
package: '@azure/arm-policy'
summary: General metadata for the parameter.
fullName: ParameterDefinitionsValueMetadata
remarks: ''
isDeprecated: false
type: interface
properties:
  - name: assignPermissions
    uid: '@azure/arm-policy.ParameterDefinitionsValueMetadata.assignPermissions'
    package: '@azure/arm-policy'
    summary: >-
      Set to true to have Azure portal create role assignments on the resource
      ID or resource scope value of this parameter during policy assignment.
      This property is useful in case you wish to assign permissions outside the
      assignment scope.
    fullName: assignPermissions
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'assignPermissions?: undefined | false | true'
      return:
        description: ''
        type: undefined | false | true
  - name: description
    uid: '@azure/arm-policy.ParameterDefinitionsValueMetadata.description'
    package: '@azure/arm-policy'
    summary: The description of the parameter.
    fullName: description
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'description?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: displayName
    uid: '@azure/arm-policy.ParameterDefinitionsValueMetadata.displayName'
    package: '@azure/arm-policy'
    summary: The display name for the parameter.
    fullName: displayName
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'displayName?: undefined | string'
      return:
        description: ''
        type: undefined | string
  - name: strongType
    uid: '@azure/arm-policy.ParameterDefinitionsValueMetadata.strongType'
    package: '@azure/arm-policy'
    summary: >-
      Used when assigning the policy definition through the portal. Provides a
      context aware list of values for the user to choose from.
    fullName: strongType
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'strongType?: undefined | string'
      return:
        description: ''
        type: undefined | string

### YamlMime:TSType
name: ChildAvailabilityStatuses
uid: '@azure/arm-resourcehealth.ChildAvailabilityStatuses'
package: '@azure/arm-resourcehealth'
summary: Interface representing a ChildAvailabilityStatuses.
fullName: ChildAvailabilityStatuses
remarks: ''
isPreview: false
isDeprecated: false
type: interface
methods:
  - name: >-
      getByResource(string,
      ChildAvailabilityStatusesGetByResourceOptionalParams)
    uid: '@azure/arm-resourcehealth.ChildAvailabilityStatuses.getByResource'
    package: '@azure/arm-resourcehealth'
    summary: Gets current availability status for a single resource
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getByResource(resourceUri: string, options?:
        ChildAvailabilityStatusesGetByResourceOptionalParams):
        Promise<ChildAvailabilityStatusesGetByResourceResponse>
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and resource
                               type. Currently the API only support one nesting level resource types :
                               /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.ChildAvailabilityStatusesGetByResourceOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          Promise&lt;<xref
          uid="@azure/arm-resourcehealth.ChildAvailabilityStatusesGetByResourceResponse"
          />&gt;
  - name: 'list(string, ChildAvailabilityStatusesListOptionalParams)'
    uid: '@azure/arm-resourcehealth.ChildAvailabilityStatuses.list'
    package: '@azure/arm-resourcehealth'
    summary: >-
      Lists the historical availability statuses for a single child resource.
      Use the nextLink property in

      the response to get the next page of availability status
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function list(resourceUri: string, options?:
        ChildAvailabilityStatusesListOptionalParams):
        PagedAsyncIterableIterator<AvailabilityStatus>
      parameters:
        - id: resourceUri
          type: string
          description: >-
            The fully qualified ID of the resource, including the resource name
            and resource
                               type. Currently the API only support one nesting level resource types :
                               /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resource-provider-name}/{parentResourceType}/{parentResourceName}/{resourceType}/{resourceName}
        - id: options
          type: >-
            <xref
            uid="@azure/arm-resourcehealth.ChildAvailabilityStatusesListOptionalParams"
            />
          description: |
            The options parameters.
      return:
        description: ''
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/arm-resourcehealth.AvailabilityStatus" />&gt;

### YamlMime:TSType
name: List
uid: microsoft-cognitiveservices-speech-sdk.List
package: microsoft-cognitiveservices-speech-sdk
summary: ''
fullName: List<TItem>
remarks: ''
isDeprecated: false
type: class
constructors:
  - name: 'List(TItem[])'
    uid: microsoft-cognitiveservices-speech-sdk.List.constructor
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'new List(list?: TItem[])'
      parameters:
        - id: list
          type: 'TItem[]'
          description: ''
methods:
  - name: add(TItem)
    uid: microsoft-cognitiveservices-speech-sdk.List.add
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function add(item: TItem)'
      parameters:
        - id: item
          type: TItem
          description: ''
  - name: 'all((item: TItem) => boolean)'
    uid: microsoft-cognitiveservices-speech-sdk.List.all
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function all(callback: (item: TItem) => boolean): boolean'
      parameters:
        - id: callback
          type: '(item: TItem) =&gt; boolean'
          description: ''
      return:
        description: ''
        type: boolean
  - name: 'any((item: TItem, index: number) => boolean)'
    uid: microsoft-cognitiveservices-speech-sdk.List.any
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function any(callback?: (item: TItem, index: number) => boolean):
        boolean
      parameters:
        - id: callback
          type: '(item: TItem, index: number) =&gt; boolean'
          description: ''
      return:
        description: ''
        type: boolean
  - name: clear()
    uid: microsoft-cognitiveservices-speech-sdk.List.clear
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: function clear()
  - name: clone()
    uid: microsoft-cognitiveservices-speech-sdk.List.clone
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function clone(): List<TItem>'
      return:
        description: ''
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.List"
          />&lt;TItem&gt;
  - name: concat(List<TItem>)
    uid: microsoft-cognitiveservices-speech-sdk.List.concat
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function concat(list: List<TItem>): List<TItem>'
      parameters:
        - id: list
          type: >-
            <xref uid="microsoft-cognitiveservices-speech-sdk.List"
            />&lt;TItem&gt;
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.List"
          />&lt;TItem&gt;
  - name: 'concatArray(TItem[])'
    uid: microsoft-cognitiveservices-speech-sdk.List.concatArray
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function concatArray(array: TItem[]): List<TItem>'
      parameters:
        - id: array
          type: 'TItem[]'
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.List"
          />&lt;TItem&gt;
  - name: dispose(string)
    uid: microsoft-cognitiveservices-speech-sdk.List.dispose
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function dispose(reason?: string)'
      parameters:
        - id: reason
          type: string
          description: ''
  - name: first()
    uid: microsoft-cognitiveservices-speech-sdk.List.first
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function first(): TItem'
      return:
        description: ''
        type: TItem
  - name: 'forEach((item: TItem, index: number) => void)'
    uid: microsoft-cognitiveservices-speech-sdk.List.forEach
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function forEach(callback: (item: TItem, index: number) => void)'
      parameters:
        - id: callback
          type: '(item: TItem, index: number) =&gt; void'
          description: ''
  - name: get(number)
    uid: microsoft-cognitiveservices-speech-sdk.List.get
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function get(itemIndex: number): TItem'
      parameters:
        - id: itemIndex
          type: number
          description: ''
      return:
        description: ''
        type: TItem
  - name: 'insertAt(number, TItem)'
    uid: microsoft-cognitiveservices-speech-sdk.List.insertAt
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function insertAt(index: number, item: TItem)'
      parameters:
        - id: index
          type: number
          description: ''
        - id: item
          type: TItem
          description: ''
  - name: isDisposed()
    uid: microsoft-cognitiveservices-speech-sdk.List.isDisposed
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isDisposed(): boolean'
      return:
        description: ''
        type: boolean
  - name: join(string)
    uid: microsoft-cognitiveservices-speech-sdk.List.join
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function join(seperator?: string): string'
      parameters:
        - id: seperator
          type: string
          description: ''
      return:
        description: ''
        type: string
  - name: last()
    uid: microsoft-cognitiveservices-speech-sdk.List.last
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function last(): TItem'
      return:
        description: ''
        type: TItem
  - name: length()
    uid: microsoft-cognitiveservices-speech-sdk.List.length
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function length(): number'
      return:
        description: ''
        type: number
  - name: onAdded(() => void)
    uid: microsoft-cognitiveservices-speech-sdk.List.onAdded
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function onAdded(addedCallback: () => void): IDetachable'
      parameters:
        - id: addedCallback
          type: () =&gt; void
          description: ''
      return:
        description: ''
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.IDetachable" />
  - name: onDisposed(() => void)
    uid: microsoft-cognitiveservices-speech-sdk.List.onDisposed
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function onDisposed(disposedCallback: () => void): IDetachable'
      parameters:
        - id: disposedCallback
          type: () =&gt; void
          description: ''
      return:
        description: ''
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.IDetachable" />
  - name: onRemoved(() => void)
    uid: microsoft-cognitiveservices-speech-sdk.List.onRemoved
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function onRemoved(removedCallback: () => void): IDetachable'
      parameters:
        - id: removedCallback
          type: () =&gt; void
          description: ''
      return:
        description: ''
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.IDetachable" />
  - name: 'orderBy((a: TItem, b: TItem) => number)'
    uid: microsoft-cognitiveservices-speech-sdk.List.orderBy
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function orderBy(compareFn: (a: TItem, b: TItem) => number): List<TItem>'
      parameters:
        - id: compareFn
          type: '(a: TItem, b: TItem) =&gt; number'
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.List"
          />&lt;TItem&gt;
  - name: 'orderByDesc((a: TItem, b: TItem) => number)'
    uid: microsoft-cognitiveservices-speech-sdk.List.orderByDesc
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function orderByDesc(compareFn: (a: TItem, b: TItem) => number):
        List<TItem>
      parameters:
        - id: compareFn
          type: '(a: TItem, b: TItem) =&gt; number'
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.List"
          />&lt;TItem&gt;
  - name: 'remove(number, number)'
    uid: microsoft-cognitiveservices-speech-sdk.List.remove
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function remove(index: number, count: number): TItem[]'
      parameters:
        - id: index
          type: number
          description: ''
        - id: count
          type: number
          description: ''
      return:
        description: ''
        type: 'TItem[]'
  - name: removeAt(number)
    uid: microsoft-cognitiveservices-speech-sdk.List.removeAt
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeAt(index: number): TItem'
      parameters:
        - id: index
          type: number
          description: ''
      return:
        description: ''
        type: TItem
  - name: removeFirst()
    uid: microsoft-cognitiveservices-speech-sdk.List.removeFirst
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeFirst(): TItem'
      return:
        description: ''
        type: TItem
  - name: removeLast()
    uid: microsoft-cognitiveservices-speech-sdk.List.removeLast
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function removeLast(): TItem'
      return:
        description: ''
        type: TItem
  - name: 'select<T2>((item: TItem, index: number) => T2)'
    uid: microsoft-cognitiveservices-speech-sdk.List.select
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function select<T2>(callback: (item: TItem, index: number) => T2):
        List<T2>
      parameters:
        - id: callback
          type: '(item: TItem, index: number) =&gt; T2'
          description: ''
      return:
        description: ''
        type: <xref uid="microsoft-cognitiveservices-speech-sdk.List" />&lt;T2&gt;
  - name: toArray()
    uid: microsoft-cognitiveservices-speech-sdk.List.toArray
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function toArray(): TItem[]'
      return:
        description: ''
        type: 'TItem[]'
  - name: 'where((item: TItem, index: number) => boolean)'
    uid: microsoft-cognitiveservices-speech-sdk.List.where
    package: microsoft-cognitiveservices-speech-sdk
    summary: ''
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function where(callback: (item: TItem, index: number) => boolean):
        List<TItem>
      parameters:
        - id: callback
          type: '(item: TItem, index: number) =&gt; boolean'
          description: ''
      return:
        description: ''
        type: >-
          <xref uid="microsoft-cognitiveservices-speech-sdk.List"
          />&lt;TItem&gt;

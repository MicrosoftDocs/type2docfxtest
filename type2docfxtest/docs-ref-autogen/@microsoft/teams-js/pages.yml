### YamlMime:TSPackage
uid: '@microsoft/teams-js - v2.5.0.pages'
name: pages
summary: Navigation-specific part of the SDK.
type: module
interfaces:
  - '@microsoft/teams-js - v2.5.0.pages.InstanceConfig'
  - '@microsoft/teams-js - v2.5.0.pages.NavigateToAppParams'
package: '@microsoft/teams-js - v2.5.0'
functions:
  - name: getConfig()
    uid: '@microsoft/teams-js - v2.5.0.pages.getConfig'
    package: '@microsoft/teams-js - v2.5.0'
    summary: Gets the config for the current instance.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function getConfig(): Promise<InstanceConfig>'
      return:
        description: >-
          Promise that resolves with the <xref:@microsoft/teams-js -
          v2.5.0.pages.InstanceConfig> object.
        type: >-
          Promise&lt;@microsoft/teams-js - <xref
          uid="v2.5.0.pages.InstanceConfig" />&gt;
  - name: 'initializeWithFrameContext(FrameInfo, () => void, string[])'
    uid: '@microsoft/teams-js - v2.5.0.pages.initializeWithFrameContext'
    package: '@microsoft/teams-js - v2.5.0'
    summary: Initializes the library with context information for the frame
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function initializeWithFrameContext(frameInfo: FrameInfo, callback?: ()
        => void, validMessageOrigins?: string[])
      parameters:
        - id: frameInfo
          type: '@microsoft/teams-js - <xref uid="v2.5.0.FrameInfo" />'
          description: >-
            Frame information containing the URL used in the iframe on reload
            and the URL for when the
             user clicks 'Go To Website'
        - id: callback
          type: () =&gt; void
          description: >-
            An optional callback that is executed once the application has
            finished initialization.
        - id: validMessageOrigins
          type: 'string[]'
          description: >
            An optional list of cross-frame message origins. They must have

            https: protocol otherwise they will be ignored. Example:
            https:www.example.com
  - name: isSupported()
    uid: '@microsoft/teams-js - v2.5.0.pages.isSupported'
    package: '@microsoft/teams-js - v2.5.0'
    summary: Checks if the pages capability is supported by the host
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function isSupported(): boolean'
      return:
        description: |-
          true if the pages capability is enabled in runtime.supports.pages and
          false if it is disabled
        type: boolean
  - name: navigateCrossDomain(string)
    uid: '@microsoft/teams-js - v2.5.0.pages.navigateCrossDomain'
    package: '@microsoft/teams-js - v2.5.0'
    summary: >-
      Navigates the frame to a new cross-domain URL. The domain of this URL must
      match at least one of the

      valid domains specified in the validDomains block of the manifest;
      otherwise, an exception will be

      thrown. This function needs to be used only when navigating the frame to a
      URL in a different domain

      than the current one in a way that keeps the application informed of the
      change and allows the SDK to

      continue working.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function navigateCrossDomain(url: string): Promise<void>'
      parameters:
        - id: url
          type: string
          description: The URL to navigate the frame to.
      return:
        description: Promise that resolves when the navigation has completed.
        type: Promise&lt;void&gt;
  - name: navigateToApp(NavigateToAppParams)
    uid: '@microsoft/teams-js - v2.5.0.pages.navigateToApp'
    package: '@microsoft/teams-js - v2.5.0'
    summary: >-
      Navigate to the given application ID and page ID, with optional parameters
      for a WebURL (if the application

      cannot be navigated to, such as if it is not installed), Channel ID (for
      applications installed as a channel tab),

      and sub-page ID (for navigating to specific content within the page). This
      is equivalent to navigating to

      a deep link with the above data, but does not require the application to
      build a URL or worry about different

      deep link formats for different hosts.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function navigateToApp(params: NavigateToAppParams): Promise<void>'
      parameters:
        - id: params
          type: >-
            @microsoft/teams-js - <xref uid="v2.5.0.pages.NavigateToAppParams"
            />
          description: Parameters for the navigation
      return:
        description: a promise that will resolve if the navigation was successful
        type: Promise&lt;void&gt;
  - name: 'registerFullScreenHandler((isFullScreen: boolean) => void)'
    uid: '@microsoft/teams-js - v2.5.0.pages.registerFullScreenHandler'
    package: '@microsoft/teams-js - v2.5.0'
    summary: >-
      Registers a handler for changes from or to full-screen view for a tab.

      Only one handler can be registered at a time. A subsequent registration
      replaces an existing registration.

      On hosts where there is no support for making an app full screen, the
      handler registered

      with this function will never be called.
    remarks: ''
    isDeprecated: false
    syntax:
      content: >-
        function registerFullScreenHandler(handler: (isFullScreen: boolean) =>
        void)
      parameters:
        - id: handler
          type: '(isFullScreen: boolean) =&gt; void'
          description: >
            The handler to invoke when the user toggles full-screen view for a
            tab.
  - name: returnFocus(boolean)
    uid: '@microsoft/teams-js - v2.5.0.pages.returnFocus'
    package: '@microsoft/teams-js - v2.5.0'
    summary: >-
      Return focus to the host. Will move focus forward or backward based on
      where the application container falls in

      the F6/tab order in the host.

      On mobile hosts or hosts where there is no keyboard interaction or UI
      notion of "focus" this function has no

      effect and will be a no-op when called.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function returnFocus(navigateForward?: boolean)'
      parameters:
        - id: navigateForward
          type: boolean
          description: |
            Determines the direction to focus in host.
  - name: setCurrentFrame(FrameInfo)
    uid: '@microsoft/teams-js - v2.5.0.pages.setCurrentFrame'
    package: '@microsoft/teams-js - v2.5.0'
    summary: Sets/Updates the current frame with new information
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function setCurrentFrame(frameInfo: FrameInfo)'
      parameters:
        - id: frameInfo
          type: '@microsoft/teams-js - <xref uid="v2.5.0.FrameInfo" />'
          description: >
            Frame information containing the URL used in the iframe on reload
            and the URL for when the

            user clicks 'Go To Website'
  - name: shareDeepLink(ShareDeepLinkParameters)
    uid: '@microsoft/teams-js - v2.5.0.pages.shareDeepLink'
    package: '@microsoft/teams-js - v2.5.0'
    summary: >-
      Shares a deep link that a user can use to navigate back to a specific
      state in this page.

      Please note that this method does yet work on mobile hosts.
    remarks: ''
    isDeprecated: false
    syntax:
      content: 'function shareDeepLink(deepLinkParameters: ShareDeepLinkParameters)'
      parameters:
        - id: deepLinkParameters
          type: '@microsoft/teams-js - <xref uid="v2.5.0.ShareDeepLinkParameters" />'
          description: |
            ID and label for the link and fallback URL.
